Terminals unused in grammar

   _CASE
   _DEFAULT
   _DO
   _IMPLEMENTS
   _INTERFACE
   _INTERNAL
   _SWITCH
   _TO
   _USE
   _NAMESPACE
   _INCLUDE
   QUOTES
   ARRAY
   OBJECT
   FUNCTION
   _DELETE
   _TYPEOF
   _INSTANCEOF
   _IS
   _UINT
   _INT
   _BOOLEAN
   _STRING
   _NUMBER
   OTHER


State 92 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 135 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce
State 150 conflicts: 1 shift/reduce
State 212 conflicts: 1 shift/reduce
State 232 conflicts: 1 shift/reduce
State 233 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: sourceElements

    2 sourceElements: sourceElement
    3               | sourceElement sourceElements

    4 sourceElement: statement

    5 statement: block
    6          | variableDeclaration
    7          | importStatement
    8          | functionStatement
    9          | forStatement
   10          | ifStatement
   11          | whileStatement
   12          | continueStatement
   13          | breakStatement
   14          | withStatement
   15          | throwStatement
   16          | tryStatement
   17          | iterationStatement
   18          | superStatement
   19          | classStatement
   20          | packageStatement
   21          | returnStatement
   22          | assignStatement

   23 importStatement: _IMPORT variableName SEMICOLON

   24 block: LBRACE RBRACE
   25      | LBRACE sourceElements RBRACE
   26      | objectInitializer

   27 variableDeclaration: variableKind variableDeclarationList SEMICOLON
   28                    | modifier variableKind variableDeclarationList SEMICOLON

   29 variableDeclarationList: variableBinding
   30                        | variableDeclarationList COMMA variableBinding

   31 variableBinding: variableName optionalVariableType variableInitialization

   32 variableName: IDENT
   33             | IDENT ACCESSDOT variableName

   34 optionalVariableType: /* empty */
   35                     | COLON variableName

   36 variableKind: _VAR
   37             | _CONST

   38 variableInitialization: /* empty */
   39                       | ASSIGN value

   40 assignStatement: variableName assign value SEMICOLON

   41 as: _AS value
   42   | /* empty */

   43 valueList: value
   44          | valueList COMMA value

   45 value: newObject
   46      | NUMBERLIT
   47      | STRINGLIT
   48      | variableName
   49      | objectInitializer
   50      | arrayAccessor
   51      | _NULL
   52      | functionCall
   53      | _THIS
   54      | ternaryExpression
   55      | _TRUE
   56      | _FALSE

   57 newObject: _NEW IDENT LPAREN RPAREN optionalVariableType
   58          | _NEW IDENT LPAREN variableDeclarationList RPAREN optionalVariableType

   59 functionStatement: functionCall
   60                  | functionDeclaration

   61 functionDeclaration: _FUNCTION getterSetter IDENT functionHeader
   62                    | modifier _FUNCTION getterSetter IDENT functionHeader

   63 getterSetter: _GET
   64             | _SET
   65             | /* empty */

   66 functionCall: variableName LPAREN valueList RPAREN SEMICOLON
   67             | variableName LPAREN RPAREN SEMICOLON

   68 functionHeader: LPAREN variableDeclarationList RPAREN block
   69               | LPAREN variableDeclarationList RPAREN COLON variableName block
   70               | LPAREN RPAREN block
   71               | LPAREN RPAREN COLON variableName block

   72 packageStatement: _PACKAGE variableName block

   73 ternaryExpression: expression _TERNARY value COLON value

   74 objectInitializer: LBRACE variableDeclarationList RBRACE optionalVariableType

   75 superStatement: _SUPER LPAREN value RPAREN SEMICOLON

   76 returnStatement: _RETURN value SEMICOLON
   77                | _RETURN functionCall SEMICOLON
   78                | _RETURN LBRACKET RBRACKET SEMICOLON

   79 classStatement: _CLASS IDENT block
   80               | modifier _CLASS IDENT block
   81               | _CLASS IDENT _EXTENDS IDENT block
   82               | modifier _CLASS IDENT _EXTENDS IDENT block

   83 modifier: modifierPrefix modifierSuffix
   84         | modifierPrefix
   85         | modifierSuffix

   86 modifierSuffix: suffixKeyword
   87               | suffixKeyword modifierSuffix

   88 modifierPrefix: prefixKeyword
   89               | prefixKeyword modifierPrefix

   90 prefixKeyword: _PUBLIC
   91              | _PRIVATE
   92              | _PROTECTED
   93              | _OVERRIDE

   94 suffixKeyword: _DYNAMIC
   95              | _FINAL
   96              | _NATIVE
   97              | _STATIC
   98              | _GET

   99 assign: ASSIGN
  100       | MULTIPLYEQ
  101       | DIVIDEEQ
  102       | MODULOEQ
  103       | PLUSEQ
  104       | MINUSEQ

  105 ifStatement: _IF expression statement
  106            | _IF expression statement elseStatement

  107 elseStatement: _ELSE statement

  108 expression: LPAREN variableName logicalOperator expression RPAREN
  109           | LPAREN variableName RPAREN
  110           | variableName

  111 whileStatement: _WHILE expression block

  112 forStatement: _FOR LPAREN _VAR IDENT expression SEMICOLON mathExpression RPAREN block
  113             | _FOR _EACH LPAREN _VAR variableName _IN value RPAREN block

  114 arrayAccessor: value LBRACKET accessValue RBRACKET
  115              | value LBRACKET RBRACKET

  116 accessValue: NUMBERLIT
  117            | variableName

  118 logicalOperator: LESSTHAN
  119                | GREATERTHAN
  120                | EQUALSEQUALS
  121                | STRICTEQUALS
  122                | STRICTNOTEQ
  123                | GTHANEQ
  124                | LTHANEQ
  125                | NOTEQUAL
  126                | NOT
  127                | NOTEQUALEQUAL
  128                | LOGICALAND
  129                | LOGICALOR

  130 iterationStatement: variableName INCREMENT SEMICOLON
  131                   | variableName DECREMENT SEMICOLON

  132 mathExpression: variableName INCREMENT
  133               | variableName DECREMENT
  134               | variableName pemd variableName
  135               | variableName as variableName

  136 pemd: MULTIPLY
  137     | DIVIDE
  138     | MODULO

  139 as: PLUS
  140   | MINUS

  141 throwStatement: _THROW value SEMICOLON

  142 tryStatement: _TRY statement catch
  143             | _TRY statement finally
  144             | _TRY statement catch finally

  145 catch: _CATCH LPAREN value RPAREN statement

  146 finally: _FINALLY statement

  147 withStatement: _WITH LPAREN expression RPAREN statement

  148 continueStatement: _CONTINUE SEMICOLON
  149                  | _CONTINUE value SEMICOLON

  150 breakStatement: _BREAK SEMICOLON
  151               | _BREAK value SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_BREAK (261) 150 151
_CATCH (262) 145
_CLASS (263) 79 80 81 82
_CONST (264) 37
_CONTINUE (265) 148 149
_DEFAULT (266)
_ELSE (267) 107
_EXTENDS (268) 81 82
_FINALLY (270) 146
_FOR (271) 112 113
_FUNCTION (272) 61 62
_IF (273) 105 106
_IMPLEMENTS (274)
_IMPORT (275) 23
_INTERFACE (276)
_INTERNAL (277)
_NULL (278) 51
_PACKAGE (279) 72
_PRIVATE (280) 91
_PROTECTED (281) 92
_PUBLIC (282) 90
_RETURN (283) 76 77 78
_SUPER (284) 75
_SWITCH (285)
_THIS (286) 53
_THROW (287) 141
_TO (288)
_TRY (289) 142 143 144
_USE (290)
_VAR (291) 36 112 113
_WHILE (292) 111
_WITH (293) 147
_EACH (294) 113
_GET (295) 63 98
_SET (296) 64
_NAMESPACE (297)
_INCLUDE (298)
_DYNAMIC (299) 94
_FINAL (300) 95
_NATIVE (301) 96
_OVERRIDE (302) 93
_STATIC (303) 97
LPAREN (304) 57 58 66 67 68 69 70 71 75 108 109 112 113 145 147
RPAREN (305) 57 58 66 67 68 69 70 71 75 108 109 112 113 145 147
LBRACE (306) 24 25 74
RBRACE (307) 24 25 74
LBRACKET (308) 78 114 115
RBRACKET (309) 78 114 115
SEMICOLON (310) 23 27 28 40 66 67 75 76 77 78 112 130 131 141 148 149
    150 151
QUOTES (311)
COMMA (312) 30 44
COLON (313) 35 69 71 73
PLUS (314) 139
MINUS (315) 140
MULTIPLY (316) 136
DIVIDE (317) 137
MODULO (318) 138
LESSTHAN (319) 118
GREATERTHAN (320) 119
EQUALSEQUALS (321) 120
STRICTEQUALS (322) 121
STRICTNOTEQ (323) 122
GTHANEQ (324) 123
LTHANEQ (325) 124
NOTEQUAL (326) 125
NOT (327) 126
NOTEQUALEQUAL (328) 127
LOGICALAND (329) 128
LOGICALOR (330) 129
_STRING (331)
_NUMBER (332)
_TRUE (334) 55
_FALSE (335) 56
ARRAY (336)
OBJECT (337)
FUNCTION (338)
ACCESSDOT (339) 33
INCREMENT (341) 130 132
DECREMENT (342) 131 133
_NEW (343) 57 58
_DELETE (344)
_TYPEOF (345)
_AS (347) 41
_IN (348) 113
_INSTANCEOF (349)
_IS (350)
_TERNARY (351) 73
ASSIGN (352) 39 99
MULTIPLYEQ (353) 100
DIVIDEEQ (354) 101
MODULOEQ (355) 102
PLUSEQ (356) 103
MINUSEQ (357) 104
IDENT (358) 32 33 57 58 61 62 79 80 81 82 112
_UINT (359)
_INT (360)
_BOOLEAN (361)
_DO (362)
_CASE (363)
OTHER (400)
STRINGLIT (402) 47
NUMBERLIT (403) 46 116


Nonterminals, with rules where they appear

$accept (105)
    on left: 0
program (106)
    on left: 1, on right: 0
sourceElements (107)
    on left: 2 3, on right: 1 3 25
sourceElement (108)
    on left: 4, on right: 2 3
statement (109)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22, on right:
    4 105 106 107 142 143 144 145 146 147
importStatement (110)
    on left: 23, on right: 7
block (111)
    on left: 24 25 26, on right: 5 68 69 70 71 72 79 80 81 82 111 112
    113
variableDeclaration (112)
    on left: 27 28, on right: 6
variableDeclarationList (113)
    on left: 29 30, on right: 27 28 30 58 68 69 74
variableBinding (114)
    on left: 31, on right: 29 30
variableName (115)
    on left: 32 33, on right: 23 31 33 35 40 48 66 67 69 71 72 108
    109 110 113 117 130 131 132 133 134 135
optionalVariableType (116)
    on left: 34 35, on right: 31 57 58 74
variableKind (117)
    on left: 36 37, on right: 27 28
variableInitialization (118)
    on left: 38 39, on right: 31
assignStatement (119)
    on left: 40, on right: 22
as (120)
    on left: 41 42 139 140, on right: 135
valueList (121)
    on left: 43 44, on right: 44 66
value (122)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56, on right: 39 40 41
    43 44 73 75 76 113 114 115 141 145 149 151
newObject (123)
    on left: 57 58, on right: 45
functionStatement (124)
    on left: 59 60, on right: 8
functionDeclaration (125)
    on left: 61 62, on right: 60
getterSetter (126)
    on left: 63 64 65, on right: 61 62
functionCall (127)
    on left: 66 67, on right: 52 59 77
functionHeader (128)
    on left: 68 69 70 71, on right: 61 62
packageStatement (129)
    on left: 72, on right: 20
ternaryExpression (130)
    on left: 73, on right: 54
objectInitializer (131)
    on left: 74, on right: 26 49
superStatement (132)
    on left: 75, on right: 18
returnStatement (133)
    on left: 76 77 78, on right: 21
classStatement (134)
    on left: 79 80 81 82, on right: 19
modifier (135)
    on left: 83 84 85, on right: 28 62 80 82
modifierSuffix (136)
    on left: 86 87, on right: 83 85 87
modifierPrefix (137)
    on left: 88 89, on right: 83 84 89
prefixKeyword (138)
    on left: 90 91 92 93, on right: 88 89
suffixKeyword (139)
    on left: 94 95 96 97 98, on right: 86 87
assign (140)
    on left: 99 100 101 102 103 104, on right: 40
ifStatement (141)
    on left: 105 106, on right: 10
elseStatement (142)
    on left: 107, on right: 106
expression (143)
    on left: 108 109 110, on right: 73 105 106 108 111 112 147
whileStatement (144)
    on left: 111, on right: 11
forStatement (145)
    on left: 112 113, on right: 9
arrayAccessor (146)
    on left: 114 115, on right: 50
accessValue (147)
    on left: 116 117, on right: 114
logicalOperator (148)
    on left: 118 119 120 121 122 123 124 125 126 127 128 129, on right:
    108
iterationStatement (149)
    on left: 130 131, on right: 17
mathExpression (150)
    on left: 132 133 134 135, on right: 112
pemd (151)
    on left: 136 137 138, on right: 134
throwStatement (152)
    on left: 141, on right: 15
tryStatement (153)
    on left: 142 143 144, on right: 16
catch (154)
    on left: 145, on right: 142 144
finally (155)
    on left: 146, on right: 143 144
withStatement (156)
    on left: 147, on right: 14
continueStatement (157)
    on left: 148 149, on right: 12
breakStatement (158)
    on left: 150 151, on right: 13


state 0

    0 $accept: . program $end

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _DYNAMIC    shift, and go to state 21
    _FINAL      shift, and go to state 22
    _NATIVE     shift, and go to state 23
    _OVERRIDE   shift, and go to state 24
    _STATIC     shift, and go to state 25
    LBRACE      shift, and go to state 26
    IDENT       shift, and go to state 27

    program              go to state 28
    sourceElements       go to state 29
    sourceElement        go to state 30
    statement            go to state 31
    importStatement      go to state 32
    block                go to state 33
    variableDeclaration  go to state 34
    variableName         go to state 35
    variableKind         go to state 36
    assignStatement      go to state 37
    functionStatement    go to state 38
    functionDeclaration  go to state 39
    functionCall         go to state 40
    packageStatement     go to state 41
    objectInitializer    go to state 42
    superStatement       go to state 43
    returnStatement      go to state 44
    classStatement       go to state 45
    modifier             go to state 46
    modifierSuffix       go to state 47
    modifierPrefix       go to state 48
    prefixKeyword        go to state 49
    suffixKeyword        go to state 50
    ifStatement          go to state 51
    whileStatement       go to state 52
    forStatement         go to state 53
    iterationStatement   go to state 54
    throwStatement       go to state 55
    tryStatement         go to state 56
    withStatement        go to state 57
    continueStatement    go to state 58
    breakStatement       go to state 59


state 1

  150 breakStatement: _BREAK . SEMICOLON
  151               | _BREAK . value SEMICOLON

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    LBRACE     shift, and go to state 63
    SEMICOLON  shift, and go to state 64
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    value              go to state 71
    newObject          go to state 72
    functionCall       go to state 73
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 2

   79 classStatement: _CLASS . IDENT block
   81               | _CLASS . IDENT _EXTENDS IDENT block

    IDENT  shift, and go to state 78


state 3

   37 variableKind: _CONST .

    $default  reduce using rule 37 (variableKind)


state 4

  148 continueStatement: _CONTINUE . SEMICOLON
  149                  | _CONTINUE . value SEMICOLON

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    LBRACE     shift, and go to state 63
    SEMICOLON  shift, and go to state 79
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    value              go to state 80
    newObject          go to state 72
    functionCall       go to state 73
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 5

  112 forStatement: _FOR . LPAREN _VAR IDENT expression SEMICOLON mathExpression RPAREN block
  113             | _FOR . _EACH LPAREN _VAR variableName _IN value RPAREN block

    _EACH   shift, and go to state 81
    LPAREN  shift, and go to state 82


state 6

   61 functionDeclaration: _FUNCTION . getterSetter IDENT functionHeader

    _GET  shift, and go to state 83
    _SET  shift, and go to state 84

    $default  reduce using rule 65 (getterSetter)

    getterSetter  go to state 85


state 7

  105 ifStatement: _IF . expression statement
  106            | _IF . expression statement elseStatement

    LPAREN  shift, and go to state 62
    IDENT   shift, and go to state 27

    variableName  go to state 86
    expression    go to state 87


state 8

   23 importStatement: _IMPORT . variableName SEMICOLON

    IDENT  shift, and go to state 27

    variableName  go to state 88


state 9

   72 packageStatement: _PACKAGE . variableName block

    IDENT  shift, and go to state 27

    variableName  go to state 89


state 10

   91 prefixKeyword: _PRIVATE .

    $default  reduce using rule 91 (prefixKeyword)


state 11

   92 prefixKeyword: _PROTECTED .

    $default  reduce using rule 92 (prefixKeyword)


state 12

   90 prefixKeyword: _PUBLIC .

    $default  reduce using rule 90 (prefixKeyword)


state 13

   76 returnStatement: _RETURN . value SEMICOLON
   77                | _RETURN . functionCall SEMICOLON
   78                | _RETURN . LBRACKET RBRACKET SEMICOLON

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    LBRACE     shift, and go to state 63
    LBRACKET   shift, and go to state 90
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    value              go to state 91
    newObject          go to state 72
    functionCall       go to state 92
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 14

   75 superStatement: _SUPER . LPAREN value RPAREN SEMICOLON

    LPAREN  shift, and go to state 93


state 15

  141 throwStatement: _THROW . value SEMICOLON

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    LBRACE     shift, and go to state 63
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    value              go to state 94
    newObject          go to state 72
    functionCall       go to state 73
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 16

  142 tryStatement: _TRY . statement catch
  143             | _TRY . statement finally
  144             | _TRY . statement catch finally

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _DYNAMIC    shift, and go to state 21
    _FINAL      shift, and go to state 22
    _NATIVE     shift, and go to state 23
    _OVERRIDE   shift, and go to state 24
    _STATIC     shift, and go to state 25
    LBRACE      shift, and go to state 26
    IDENT       shift, and go to state 27

    statement            go to state 95
    importStatement      go to state 32
    block                go to state 33
    variableDeclaration  go to state 34
    variableName         go to state 35
    variableKind         go to state 36
    assignStatement      go to state 37
    functionStatement    go to state 38
    functionDeclaration  go to state 39
    functionCall         go to state 40
    packageStatement     go to state 41
    objectInitializer    go to state 42
    superStatement       go to state 43
    returnStatement      go to state 44
    classStatement       go to state 45
    modifier             go to state 46
    modifierSuffix       go to state 47
    modifierPrefix       go to state 48
    prefixKeyword        go to state 49
    suffixKeyword        go to state 50
    ifStatement          go to state 51
    whileStatement       go to state 52
    forStatement         go to state 53
    iterationStatement   go to state 54
    throwStatement       go to state 55
    tryStatement         go to state 56
    withStatement        go to state 57
    continueStatement    go to state 58
    breakStatement       go to state 59


state 17

   36 variableKind: _VAR .

    $default  reduce using rule 36 (variableKind)


state 18

  111 whileStatement: _WHILE . expression block

    LPAREN  shift, and go to state 62
    IDENT   shift, and go to state 27

    variableName  go to state 86
    expression    go to state 96


state 19

  147 withStatement: _WITH . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 97


state 20

   98 suffixKeyword: _GET .

    $default  reduce using rule 98 (suffixKeyword)


state 21

   94 suffixKeyword: _DYNAMIC .

    $default  reduce using rule 94 (suffixKeyword)


state 22

   95 suffixKeyword: _FINAL .

    $default  reduce using rule 95 (suffixKeyword)


state 23

   96 suffixKeyword: _NATIVE .

    $default  reduce using rule 96 (suffixKeyword)


state 24

   93 prefixKeyword: _OVERRIDE .

    $default  reduce using rule 93 (prefixKeyword)


state 25

   97 suffixKeyword: _STATIC .

    $default  reduce using rule 97 (suffixKeyword)


state 26

   24 block: LBRACE . RBRACE
   25      | LBRACE . sourceElements RBRACE
   74 objectInitializer: LBRACE . variableDeclarationList RBRACE optionalVariableType

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _DYNAMIC    shift, and go to state 21
    _FINAL      shift, and go to state 22
    _NATIVE     shift, and go to state 23
    _OVERRIDE   shift, and go to state 24
    _STATIC     shift, and go to state 25
    LBRACE      shift, and go to state 26
    RBRACE      shift, and go to state 98
    IDENT       shift, and go to state 27

    sourceElements           go to state 99
    sourceElement            go to state 30
    statement                go to state 31
    importStatement          go to state 32
    block                    go to state 33
    variableDeclaration      go to state 34
    variableDeclarationList  go to state 100
    variableBinding          go to state 101
    variableName             go to state 102
    variableKind             go to state 36
    assignStatement          go to state 37
    functionStatement        go to state 38
    functionDeclaration      go to state 39
    functionCall             go to state 40
    packageStatement         go to state 41
    objectInitializer        go to state 42
    superStatement           go to state 43
    returnStatement          go to state 44
    classStatement           go to state 45
    modifier                 go to state 46
    modifierSuffix           go to state 47
    modifierPrefix           go to state 48
    prefixKeyword            go to state 49
    suffixKeyword            go to state 50
    ifStatement              go to state 51
    whileStatement           go to state 52
    forStatement             go to state 53
    iterationStatement       go to state 54
    throwStatement           go to state 55
    tryStatement             go to state 56
    withStatement            go to state 57
    continueStatement        go to state 58
    breakStatement           go to state 59


state 27

   32 variableName: IDENT .
   33             | IDENT . ACCESSDOT variableName

    ACCESSDOT  shift, and go to state 103

    $default  reduce using rule 32 (variableName)


state 28

    0 $accept: program . $end

    $end  shift, and go to state 104


state 29

    1 program: sourceElements .

    $default  reduce using rule 1 (program)


state 30

    2 sourceElements: sourceElement .
    3               | sourceElement . sourceElements

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _DYNAMIC    shift, and go to state 21
    _FINAL      shift, and go to state 22
    _NATIVE     shift, and go to state 23
    _OVERRIDE   shift, and go to state 24
    _STATIC     shift, and go to state 25
    LBRACE      shift, and go to state 26
    IDENT       shift, and go to state 27

    $default  reduce using rule 2 (sourceElements)

    sourceElements       go to state 105
    sourceElement        go to state 30
    statement            go to state 31
    importStatement      go to state 32
    block                go to state 33
    variableDeclaration  go to state 34
    variableName         go to state 35
    variableKind         go to state 36
    assignStatement      go to state 37
    functionStatement    go to state 38
    functionDeclaration  go to state 39
    functionCall         go to state 40
    packageStatement     go to state 41
    objectInitializer    go to state 42
    superStatement       go to state 43
    returnStatement      go to state 44
    classStatement       go to state 45
    modifier             go to state 46
    modifierSuffix       go to state 47
    modifierPrefix       go to state 48
    prefixKeyword        go to state 49
    suffixKeyword        go to state 50
    ifStatement          go to state 51
    whileStatement       go to state 52
    forStatement         go to state 53
    iterationStatement   go to state 54
    throwStatement       go to state 55
    tryStatement         go to state 56
    withStatement        go to state 57
    continueStatement    go to state 58
    breakStatement       go to state 59


state 31

    4 sourceElement: statement .

    $default  reduce using rule 4 (sourceElement)


state 32

    7 statement: importStatement .

    $default  reduce using rule 7 (statement)


state 33

    5 statement: block .

    $default  reduce using rule 5 (statement)


state 34

    6 statement: variableDeclaration .

    $default  reduce using rule 6 (statement)


state 35

   40 assignStatement: variableName . assign value SEMICOLON
   66 functionCall: variableName . LPAREN valueList RPAREN SEMICOLON
   67             | variableName . LPAREN RPAREN SEMICOLON
  130 iterationStatement: variableName . INCREMENT SEMICOLON
  131                   | variableName . DECREMENT SEMICOLON

    LPAREN      shift, and go to state 106
    INCREMENT   shift, and go to state 107
    DECREMENT   shift, and go to state 108
    ASSIGN      shift, and go to state 109
    MULTIPLYEQ  shift, and go to state 110
    DIVIDEEQ    shift, and go to state 111
    MODULOEQ    shift, and go to state 112
    PLUSEQ      shift, and go to state 113
    MINUSEQ     shift, and go to state 114

    assign  go to state 115


state 36

   27 variableDeclaration: variableKind . variableDeclarationList SEMICOLON

    IDENT  shift, and go to state 27

    variableDeclarationList  go to state 116
    variableBinding          go to state 101
    variableName             go to state 117


state 37

   22 statement: assignStatement .

    $default  reduce using rule 22 (statement)


state 38

    8 statement: functionStatement .

    $default  reduce using rule 8 (statement)


state 39

   60 functionStatement: functionDeclaration .

    $default  reduce using rule 60 (functionStatement)


state 40

   59 functionStatement: functionCall .

    $default  reduce using rule 59 (functionStatement)


state 41

   20 statement: packageStatement .

    $default  reduce using rule 20 (statement)


state 42

   26 block: objectInitializer .

    $default  reduce using rule 26 (block)


state 43

   18 statement: superStatement .

    $default  reduce using rule 18 (statement)


state 44

   21 statement: returnStatement .

    $default  reduce using rule 21 (statement)


state 45

   19 statement: classStatement .

    $default  reduce using rule 19 (statement)


state 46

   28 variableDeclaration: modifier . variableKind variableDeclarationList SEMICOLON
   62 functionDeclaration: modifier . _FUNCTION getterSetter IDENT functionHeader
   80 classStatement: modifier . _CLASS IDENT block
   82               | modifier . _CLASS IDENT _EXTENDS IDENT block

    _CLASS     shift, and go to state 118
    _CONST     shift, and go to state 3
    _FUNCTION  shift, and go to state 119
    _VAR       shift, and go to state 17

    variableKind  go to state 120


state 47

   85 modifier: modifierSuffix .

    $default  reduce using rule 85 (modifier)


state 48

   83 modifier: modifierPrefix . modifierSuffix
   84         | modifierPrefix .

    _GET      shift, and go to state 20
    _DYNAMIC  shift, and go to state 21
    _FINAL    shift, and go to state 22
    _NATIVE   shift, and go to state 23
    _STATIC   shift, and go to state 25

    $default  reduce using rule 84 (modifier)

    modifierSuffix  go to state 121
    suffixKeyword   go to state 50


state 49

   88 modifierPrefix: prefixKeyword .
   89               | prefixKeyword . modifierPrefix

    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _OVERRIDE   shift, and go to state 24

    $default  reduce using rule 88 (modifierPrefix)

    modifierPrefix  go to state 122
    prefixKeyword   go to state 49


state 50

   86 modifierSuffix: suffixKeyword .
   87               | suffixKeyword . modifierSuffix

    _GET      shift, and go to state 20
    _DYNAMIC  shift, and go to state 21
    _FINAL    shift, and go to state 22
    _NATIVE   shift, and go to state 23
    _STATIC   shift, and go to state 25

    $default  reduce using rule 86 (modifierSuffix)

    modifierSuffix  go to state 123
    suffixKeyword   go to state 50


state 51

   10 statement: ifStatement .

    $default  reduce using rule 10 (statement)


state 52

   11 statement: whileStatement .

    $default  reduce using rule 11 (statement)


state 53

    9 statement: forStatement .

    $default  reduce using rule 9 (statement)


state 54

   17 statement: iterationStatement .

    $default  reduce using rule 17 (statement)


state 55

   15 statement: throwStatement .

    $default  reduce using rule 15 (statement)


state 56

   16 statement: tryStatement .

    $default  reduce using rule 16 (statement)


state 57

   14 statement: withStatement .

    $default  reduce using rule 14 (statement)


state 58

   12 statement: continueStatement .

    $default  reduce using rule 12 (statement)


state 59

   13 statement: breakStatement .

    $default  reduce using rule 13 (statement)


state 60

   51 value: _NULL .

    $default  reduce using rule 51 (value)


state 61

   53 value: _THIS .

    $default  reduce using rule 53 (value)


state 62

  108 expression: LPAREN . variableName logicalOperator expression RPAREN
  109           | LPAREN . variableName RPAREN

    IDENT  shift, and go to state 27

    variableName  go to state 124


state 63

   74 objectInitializer: LBRACE . variableDeclarationList RBRACE optionalVariableType

    IDENT  shift, and go to state 27

    variableDeclarationList  go to state 100
    variableBinding          go to state 101
    variableName             go to state 117


state 64

  150 breakStatement: _BREAK SEMICOLON .

    $default  reduce using rule 150 (breakStatement)


state 65

   55 value: _TRUE .

    $default  reduce using rule 55 (value)


state 66

   56 value: _FALSE .

    $default  reduce using rule 56 (value)


state 67

   57 newObject: _NEW . IDENT LPAREN RPAREN optionalVariableType
   58          | _NEW . IDENT LPAREN variableDeclarationList RPAREN optionalVariableType

    IDENT  shift, and go to state 125


state 68

   47 value: STRINGLIT .

    $default  reduce using rule 47 (value)


state 69

   46 value: NUMBERLIT .

    $default  reduce using rule 46 (value)


state 70

   48 value: variableName .
   66 functionCall: variableName . LPAREN valueList RPAREN SEMICOLON
   67             | variableName . LPAREN RPAREN SEMICOLON
  110 expression: variableName .

    LPAREN  shift, and go to state 106

    _TERNARY  reduce using rule 110 (expression)
    $default  reduce using rule 48 (value)


state 71

  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET
  151 breakStatement: _BREAK value . SEMICOLON

    LBRACKET   shift, and go to state 126
    SEMICOLON  shift, and go to state 127


state 72

   45 value: newObject .

    $default  reduce using rule 45 (value)


state 73

   52 value: functionCall .

    $default  reduce using rule 52 (value)


state 74

   54 value: ternaryExpression .

    $default  reduce using rule 54 (value)


state 75

   49 value: objectInitializer .

    $default  reduce using rule 49 (value)


state 76

   73 ternaryExpression: expression . _TERNARY value COLON value

    _TERNARY  shift, and go to state 128


state 77

   50 value: arrayAccessor .

    $default  reduce using rule 50 (value)


state 78

   79 classStatement: _CLASS IDENT . block
   81               | _CLASS IDENT . _EXTENDS IDENT block

    _EXTENDS  shift, and go to state 129
    LBRACE    shift, and go to state 26

    block              go to state 130
    objectInitializer  go to state 42


state 79

  148 continueStatement: _CONTINUE SEMICOLON .

    $default  reduce using rule 148 (continueStatement)


state 80

  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET
  149 continueStatement: _CONTINUE value . SEMICOLON

    LBRACKET   shift, and go to state 126
    SEMICOLON  shift, and go to state 131


state 81

  113 forStatement: _FOR _EACH . LPAREN _VAR variableName _IN value RPAREN block

    LPAREN  shift, and go to state 132


state 82

  112 forStatement: _FOR LPAREN . _VAR IDENT expression SEMICOLON mathExpression RPAREN block

    _VAR  shift, and go to state 133


state 83

   63 getterSetter: _GET .

    $default  reduce using rule 63 (getterSetter)


state 84

   64 getterSetter: _SET .

    $default  reduce using rule 64 (getterSetter)


state 85

   61 functionDeclaration: _FUNCTION getterSetter . IDENT functionHeader

    IDENT  shift, and go to state 134


state 86

  110 expression: variableName .

    $default  reduce using rule 110 (expression)


state 87

  105 ifStatement: _IF expression . statement
  106            | _IF expression . statement elseStatement

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _DYNAMIC    shift, and go to state 21
    _FINAL      shift, and go to state 22
    _NATIVE     shift, and go to state 23
    _OVERRIDE   shift, and go to state 24
    _STATIC     shift, and go to state 25
    LBRACE      shift, and go to state 26
    IDENT       shift, and go to state 27

    statement            go to state 135
    importStatement      go to state 32
    block                go to state 33
    variableDeclaration  go to state 34
    variableName         go to state 35
    variableKind         go to state 36
    assignStatement      go to state 37
    functionStatement    go to state 38
    functionDeclaration  go to state 39
    functionCall         go to state 40
    packageStatement     go to state 41
    objectInitializer    go to state 42
    superStatement       go to state 43
    returnStatement      go to state 44
    classStatement       go to state 45
    modifier             go to state 46
    modifierSuffix       go to state 47
    modifierPrefix       go to state 48
    prefixKeyword        go to state 49
    suffixKeyword        go to state 50
    ifStatement          go to state 51
    whileStatement       go to state 52
    forStatement         go to state 53
    iterationStatement   go to state 54
    throwStatement       go to state 55
    tryStatement         go to state 56
    withStatement        go to state 57
    continueStatement    go to state 58
    breakStatement       go to state 59


state 88

   23 importStatement: _IMPORT variableName . SEMICOLON

    SEMICOLON  shift, and go to state 136


state 89

   72 packageStatement: _PACKAGE variableName . block

    LBRACE  shift, and go to state 26

    block              go to state 137
    objectInitializer  go to state 42


state 90

   78 returnStatement: _RETURN LBRACKET . RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 138


state 91

   76 returnStatement: _RETURN value . SEMICOLON
  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET

    LBRACKET   shift, and go to state 126
    SEMICOLON  shift, and go to state 139


state 92

   52 value: functionCall .
   77 returnStatement: _RETURN functionCall . SEMICOLON

    SEMICOLON  shift, and go to state 140

    SEMICOLON  [reduce using rule 52 (value)]
    $default   reduce using rule 52 (value)


state 93

   75 superStatement: _SUPER LPAREN . value RPAREN SEMICOLON

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    LBRACE     shift, and go to state 63
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    value              go to state 141
    newObject          go to state 72
    functionCall       go to state 73
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 94

  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET
  141 throwStatement: _THROW value . SEMICOLON

    LBRACKET   shift, and go to state 126
    SEMICOLON  shift, and go to state 142


state 95

  142 tryStatement: _TRY statement . catch
  143             | _TRY statement . finally
  144             | _TRY statement . catch finally

    _CATCH    shift, and go to state 143
    _FINALLY  shift, and go to state 144

    catch    go to state 145
    finally  go to state 146


state 96

  111 whileStatement: _WHILE expression . block

    LBRACE  shift, and go to state 26

    block              go to state 147
    objectInitializer  go to state 42


state 97

  147 withStatement: _WITH LPAREN . expression RPAREN statement

    LPAREN  shift, and go to state 62
    IDENT   shift, and go to state 27

    variableName  go to state 86
    expression    go to state 148


state 98

   24 block: LBRACE RBRACE .

    $default  reduce using rule 24 (block)


state 99

   25 block: LBRACE sourceElements . RBRACE

    RBRACE  shift, and go to state 149


state 100

   30 variableDeclarationList: variableDeclarationList . COMMA variableBinding
   74 objectInitializer: LBRACE variableDeclarationList . RBRACE optionalVariableType

    RBRACE  shift, and go to state 150
    COMMA   shift, and go to state 151


state 101

   29 variableDeclarationList: variableBinding .

    $default  reduce using rule 29 (variableDeclarationList)


state 102

   31 variableBinding: variableName . optionalVariableType variableInitialization
   40 assignStatement: variableName . assign value SEMICOLON
   66 functionCall: variableName . LPAREN valueList RPAREN SEMICOLON
   67             | variableName . LPAREN RPAREN SEMICOLON
  130 iterationStatement: variableName . INCREMENT SEMICOLON
  131                   | variableName . DECREMENT SEMICOLON

    LPAREN      shift, and go to state 106
    COLON       shift, and go to state 152
    INCREMENT   shift, and go to state 107
    DECREMENT   shift, and go to state 108
    ASSIGN      shift, and go to state 109
    MULTIPLYEQ  shift, and go to state 110
    DIVIDEEQ    shift, and go to state 111
    MODULOEQ    shift, and go to state 112
    PLUSEQ      shift, and go to state 113
    MINUSEQ     shift, and go to state 114

    ASSIGN    [reduce using rule 34 (optionalVariableType)]
    $default  reduce using rule 34 (optionalVariableType)

    optionalVariableType  go to state 153
    assign                go to state 115


state 103

   33 variableName: IDENT ACCESSDOT . variableName

    IDENT  shift, and go to state 27

    variableName  go to state 154


state 104

    0 $accept: program $end .

    $default  accept


state 105

    3 sourceElements: sourceElement sourceElements .

    $default  reduce using rule 3 (sourceElements)


state 106

   66 functionCall: variableName LPAREN . valueList RPAREN SEMICOLON
   67             | variableName LPAREN . RPAREN SEMICOLON

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    RPAREN     shift, and go to state 155
    LBRACE     shift, and go to state 63
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    valueList          go to state 156
    value              go to state 157
    newObject          go to state 72
    functionCall       go to state 73
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 107

  130 iterationStatement: variableName INCREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 158


state 108

  131 iterationStatement: variableName DECREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 159


state 109

   99 assign: ASSIGN .

    $default  reduce using rule 99 (assign)


state 110

  100 assign: MULTIPLYEQ .

    $default  reduce using rule 100 (assign)


state 111

  101 assign: DIVIDEEQ .

    $default  reduce using rule 101 (assign)


state 112

  102 assign: MODULOEQ .

    $default  reduce using rule 102 (assign)


state 113

  103 assign: PLUSEQ .

    $default  reduce using rule 103 (assign)


state 114

  104 assign: MINUSEQ .

    $default  reduce using rule 104 (assign)


state 115

   40 assignStatement: variableName assign . value SEMICOLON

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    LBRACE     shift, and go to state 63
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    value              go to state 160
    newObject          go to state 72
    functionCall       go to state 73
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 116

   27 variableDeclaration: variableKind variableDeclarationList . SEMICOLON
   30 variableDeclarationList: variableDeclarationList . COMMA variableBinding

    SEMICOLON  shift, and go to state 161
    COMMA      shift, and go to state 151


state 117

   31 variableBinding: variableName . optionalVariableType variableInitialization

    COLON  shift, and go to state 152

    $default  reduce using rule 34 (optionalVariableType)

    optionalVariableType  go to state 153


state 118

   80 classStatement: modifier _CLASS . IDENT block
   82               | modifier _CLASS . IDENT _EXTENDS IDENT block

    IDENT  shift, and go to state 162


state 119

   62 functionDeclaration: modifier _FUNCTION . getterSetter IDENT functionHeader

    _GET  shift, and go to state 83
    _SET  shift, and go to state 84

    $default  reduce using rule 65 (getterSetter)

    getterSetter  go to state 163


state 120

   28 variableDeclaration: modifier variableKind . variableDeclarationList SEMICOLON

    IDENT  shift, and go to state 27

    variableDeclarationList  go to state 164
    variableBinding          go to state 101
    variableName             go to state 117


state 121

   83 modifier: modifierPrefix modifierSuffix .

    $default  reduce using rule 83 (modifier)


state 122

   89 modifierPrefix: prefixKeyword modifierPrefix .

    $default  reduce using rule 89 (modifierPrefix)


state 123

   87 modifierSuffix: suffixKeyword modifierSuffix .

    $default  reduce using rule 87 (modifierSuffix)


state 124

  108 expression: LPAREN variableName . logicalOperator expression RPAREN
  109           | LPAREN variableName . RPAREN

    RPAREN         shift, and go to state 165
    LESSTHAN       shift, and go to state 166
    GREATERTHAN    shift, and go to state 167
    EQUALSEQUALS   shift, and go to state 168
    STRICTEQUALS   shift, and go to state 169
    STRICTNOTEQ    shift, and go to state 170
    GTHANEQ        shift, and go to state 171
    LTHANEQ        shift, and go to state 172
    NOTEQUAL       shift, and go to state 173
    NOT            shift, and go to state 174
    NOTEQUALEQUAL  shift, and go to state 175
    LOGICALAND     shift, and go to state 176
    LOGICALOR      shift, and go to state 177

    logicalOperator  go to state 178


state 125

   57 newObject: _NEW IDENT . LPAREN RPAREN optionalVariableType
   58          | _NEW IDENT . LPAREN variableDeclarationList RPAREN optionalVariableType

    LPAREN  shift, and go to state 179


state 126

  114 arrayAccessor: value LBRACKET . accessValue RBRACKET
  115              | value LBRACKET . RBRACKET

    RBRACKET   shift, and go to state 180
    NUMBERLIT  shift, and go to state 181
    IDENT      shift, and go to state 27

    variableName  go to state 182
    accessValue   go to state 183


state 127

  151 breakStatement: _BREAK value SEMICOLON .

    $default  reduce using rule 151 (breakStatement)


state 128

   73 ternaryExpression: expression _TERNARY . value COLON value

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    LBRACE     shift, and go to state 63
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    value              go to state 184
    newObject          go to state 72
    functionCall       go to state 73
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 129

   81 classStatement: _CLASS IDENT _EXTENDS . IDENT block

    IDENT  shift, and go to state 185


state 130

   79 classStatement: _CLASS IDENT block .

    $default  reduce using rule 79 (classStatement)


state 131

  149 continueStatement: _CONTINUE value SEMICOLON .

    $default  reduce using rule 149 (continueStatement)


state 132

  113 forStatement: _FOR _EACH LPAREN . _VAR variableName _IN value RPAREN block

    _VAR  shift, and go to state 186


state 133

  112 forStatement: _FOR LPAREN _VAR . IDENT expression SEMICOLON mathExpression RPAREN block

    IDENT  shift, and go to state 187


state 134

   61 functionDeclaration: _FUNCTION getterSetter IDENT . functionHeader

    LPAREN  shift, and go to state 188

    functionHeader  go to state 189


state 135

  105 ifStatement: _IF expression statement .
  106            | _IF expression statement . elseStatement

    _ELSE  shift, and go to state 190

    _ELSE     [reduce using rule 105 (ifStatement)]
    $default  reduce using rule 105 (ifStatement)

    elseStatement  go to state 191


state 136

   23 importStatement: _IMPORT variableName SEMICOLON .

    $default  reduce using rule 23 (importStatement)


state 137

   72 packageStatement: _PACKAGE variableName block .

    $default  reduce using rule 72 (packageStatement)


state 138

   78 returnStatement: _RETURN LBRACKET RBRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 192


state 139

   76 returnStatement: _RETURN value SEMICOLON .

    $default  reduce using rule 76 (returnStatement)


state 140

   77 returnStatement: _RETURN functionCall SEMICOLON .

    $default  reduce using rule 77 (returnStatement)


state 141

   75 superStatement: _SUPER LPAREN value . RPAREN SEMICOLON
  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET

    RPAREN    shift, and go to state 193
    LBRACKET  shift, and go to state 126


state 142

  141 throwStatement: _THROW value SEMICOLON .

    $default  reduce using rule 141 (throwStatement)


state 143

  145 catch: _CATCH . LPAREN value RPAREN statement

    LPAREN  shift, and go to state 194


state 144

  146 finally: _FINALLY . statement

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _DYNAMIC    shift, and go to state 21
    _FINAL      shift, and go to state 22
    _NATIVE     shift, and go to state 23
    _OVERRIDE   shift, and go to state 24
    _STATIC     shift, and go to state 25
    LBRACE      shift, and go to state 26
    IDENT       shift, and go to state 27

    statement            go to state 195
    importStatement      go to state 32
    block                go to state 33
    variableDeclaration  go to state 34
    variableName         go to state 35
    variableKind         go to state 36
    assignStatement      go to state 37
    functionStatement    go to state 38
    functionDeclaration  go to state 39
    functionCall         go to state 40
    packageStatement     go to state 41
    objectInitializer    go to state 42
    superStatement       go to state 43
    returnStatement      go to state 44
    classStatement       go to state 45
    modifier             go to state 46
    modifierSuffix       go to state 47
    modifierPrefix       go to state 48
    prefixKeyword        go to state 49
    suffixKeyword        go to state 50
    ifStatement          go to state 51
    whileStatement       go to state 52
    forStatement         go to state 53
    iterationStatement   go to state 54
    throwStatement       go to state 55
    tryStatement         go to state 56
    withStatement        go to state 57
    continueStatement    go to state 58
    breakStatement       go to state 59


state 145

  142 tryStatement: _TRY statement catch .
  144             | _TRY statement catch . finally

    _FINALLY  shift, and go to state 144

    _FINALLY  [reduce using rule 142 (tryStatement)]
    $default  reduce using rule 142 (tryStatement)

    finally  go to state 196


state 146

  143 tryStatement: _TRY statement finally .

    $default  reduce using rule 143 (tryStatement)


state 147

  111 whileStatement: _WHILE expression block .

    $default  reduce using rule 111 (whileStatement)


state 148

  147 withStatement: _WITH LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 197


state 149

   25 block: LBRACE sourceElements RBRACE .

    $default  reduce using rule 25 (block)


state 150

   74 objectInitializer: LBRACE variableDeclarationList RBRACE . optionalVariableType

    COLON  shift, and go to state 152

    COLON     [reduce using rule 34 (optionalVariableType)]
    $default  reduce using rule 34 (optionalVariableType)

    optionalVariableType  go to state 198


state 151

   30 variableDeclarationList: variableDeclarationList COMMA . variableBinding

    IDENT  shift, and go to state 27

    variableBinding  go to state 199
    variableName     go to state 117


state 152

   35 optionalVariableType: COLON . variableName

    IDENT  shift, and go to state 27

    variableName  go to state 200


state 153

   31 variableBinding: variableName optionalVariableType . variableInitialization

    ASSIGN  shift, and go to state 201

    $default  reduce using rule 38 (variableInitialization)

    variableInitialization  go to state 202


state 154

   33 variableName: IDENT ACCESSDOT variableName .

    $default  reduce using rule 33 (variableName)


state 155

   67 functionCall: variableName LPAREN RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 203


state 156

   44 valueList: valueList . COMMA value
   66 functionCall: variableName LPAREN valueList . RPAREN SEMICOLON

    RPAREN  shift, and go to state 204
    COMMA   shift, and go to state 205


state 157

   43 valueList: value .
  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 126

    $default  reduce using rule 43 (valueList)


state 158

  130 iterationStatement: variableName INCREMENT SEMICOLON .

    $default  reduce using rule 130 (iterationStatement)


state 159

  131 iterationStatement: variableName DECREMENT SEMICOLON .

    $default  reduce using rule 131 (iterationStatement)


state 160

   40 assignStatement: variableName assign value . SEMICOLON
  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET

    LBRACKET   shift, and go to state 126
    SEMICOLON  shift, and go to state 206


state 161

   27 variableDeclaration: variableKind variableDeclarationList SEMICOLON .

    $default  reduce using rule 27 (variableDeclaration)


state 162

   80 classStatement: modifier _CLASS IDENT . block
   82               | modifier _CLASS IDENT . _EXTENDS IDENT block

    _EXTENDS  shift, and go to state 207
    LBRACE    shift, and go to state 26

    block              go to state 208
    objectInitializer  go to state 42


state 163

   62 functionDeclaration: modifier _FUNCTION getterSetter . IDENT functionHeader

    IDENT  shift, and go to state 209


state 164

   28 variableDeclaration: modifier variableKind variableDeclarationList . SEMICOLON
   30 variableDeclarationList: variableDeclarationList . COMMA variableBinding

    SEMICOLON  shift, and go to state 210
    COMMA      shift, and go to state 151


state 165

  109 expression: LPAREN variableName RPAREN .

    $default  reduce using rule 109 (expression)


state 166

  118 logicalOperator: LESSTHAN .

    $default  reduce using rule 118 (logicalOperator)


state 167

  119 logicalOperator: GREATERTHAN .

    $default  reduce using rule 119 (logicalOperator)


state 168

  120 logicalOperator: EQUALSEQUALS .

    $default  reduce using rule 120 (logicalOperator)


state 169

  121 logicalOperator: STRICTEQUALS .

    $default  reduce using rule 121 (logicalOperator)


state 170

  122 logicalOperator: STRICTNOTEQ .

    $default  reduce using rule 122 (logicalOperator)


state 171

  123 logicalOperator: GTHANEQ .

    $default  reduce using rule 123 (logicalOperator)


state 172

  124 logicalOperator: LTHANEQ .

    $default  reduce using rule 124 (logicalOperator)


state 173

  125 logicalOperator: NOTEQUAL .

    $default  reduce using rule 125 (logicalOperator)


state 174

  126 logicalOperator: NOT .

    $default  reduce using rule 126 (logicalOperator)


state 175

  127 logicalOperator: NOTEQUALEQUAL .

    $default  reduce using rule 127 (logicalOperator)


state 176

  128 logicalOperator: LOGICALAND .

    $default  reduce using rule 128 (logicalOperator)


state 177

  129 logicalOperator: LOGICALOR .

    $default  reduce using rule 129 (logicalOperator)


state 178

  108 expression: LPAREN variableName logicalOperator . expression RPAREN

    LPAREN  shift, and go to state 62
    IDENT   shift, and go to state 27

    variableName  go to state 86
    expression    go to state 211


state 179

   57 newObject: _NEW IDENT LPAREN . RPAREN optionalVariableType
   58          | _NEW IDENT LPAREN . variableDeclarationList RPAREN optionalVariableType

    RPAREN  shift, and go to state 212
    IDENT   shift, and go to state 27

    variableDeclarationList  go to state 213
    variableBinding          go to state 101
    variableName             go to state 117


state 180

  115 arrayAccessor: value LBRACKET RBRACKET .

    $default  reduce using rule 115 (arrayAccessor)


state 181

  116 accessValue: NUMBERLIT .

    $default  reduce using rule 116 (accessValue)


state 182

  117 accessValue: variableName .

    $default  reduce using rule 117 (accessValue)


state 183

  114 arrayAccessor: value LBRACKET accessValue . RBRACKET

    RBRACKET  shift, and go to state 214


state 184

   73 ternaryExpression: expression _TERNARY value . COLON value
  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 126
    COLON     shift, and go to state 215


state 185

   81 classStatement: _CLASS IDENT _EXTENDS IDENT . block

    LBRACE  shift, and go to state 26

    block              go to state 216
    objectInitializer  go to state 42


state 186

  113 forStatement: _FOR _EACH LPAREN _VAR . variableName _IN value RPAREN block

    IDENT  shift, and go to state 27

    variableName  go to state 217


state 187

  112 forStatement: _FOR LPAREN _VAR IDENT . expression SEMICOLON mathExpression RPAREN block

    LPAREN  shift, and go to state 62
    IDENT   shift, and go to state 27

    variableName  go to state 86
    expression    go to state 218


state 188

   68 functionHeader: LPAREN . variableDeclarationList RPAREN block
   69               | LPAREN . variableDeclarationList RPAREN COLON variableName block
   70               | LPAREN . RPAREN block
   71               | LPAREN . RPAREN COLON variableName block

    RPAREN  shift, and go to state 219
    IDENT   shift, and go to state 27

    variableDeclarationList  go to state 220
    variableBinding          go to state 101
    variableName             go to state 117


state 189

   61 functionDeclaration: _FUNCTION getterSetter IDENT functionHeader .

    $default  reduce using rule 61 (functionDeclaration)


state 190

  107 elseStatement: _ELSE . statement

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _DYNAMIC    shift, and go to state 21
    _FINAL      shift, and go to state 22
    _NATIVE     shift, and go to state 23
    _OVERRIDE   shift, and go to state 24
    _STATIC     shift, and go to state 25
    LBRACE      shift, and go to state 26
    IDENT       shift, and go to state 27

    statement            go to state 221
    importStatement      go to state 32
    block                go to state 33
    variableDeclaration  go to state 34
    variableName         go to state 35
    variableKind         go to state 36
    assignStatement      go to state 37
    functionStatement    go to state 38
    functionDeclaration  go to state 39
    functionCall         go to state 40
    packageStatement     go to state 41
    objectInitializer    go to state 42
    superStatement       go to state 43
    returnStatement      go to state 44
    classStatement       go to state 45
    modifier             go to state 46
    modifierSuffix       go to state 47
    modifierPrefix       go to state 48
    prefixKeyword        go to state 49
    suffixKeyword        go to state 50
    ifStatement          go to state 51
    whileStatement       go to state 52
    forStatement         go to state 53
    iterationStatement   go to state 54
    throwStatement       go to state 55
    tryStatement         go to state 56
    withStatement        go to state 57
    continueStatement    go to state 58
    breakStatement       go to state 59


state 191

  106 ifStatement: _IF expression statement elseStatement .

    $default  reduce using rule 106 (ifStatement)


state 192

   78 returnStatement: _RETURN LBRACKET RBRACKET SEMICOLON .

    $default  reduce using rule 78 (returnStatement)


state 193

   75 superStatement: _SUPER LPAREN value RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 222


state 194

  145 catch: _CATCH LPAREN . value RPAREN statement

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    LBRACE     shift, and go to state 63
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    value              go to state 223
    newObject          go to state 72
    functionCall       go to state 73
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 195

  146 finally: _FINALLY statement .

    $default  reduce using rule 146 (finally)


state 196

  144 tryStatement: _TRY statement catch finally .

    $default  reduce using rule 144 (tryStatement)


state 197

  147 withStatement: _WITH LPAREN expression RPAREN . statement

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _DYNAMIC    shift, and go to state 21
    _FINAL      shift, and go to state 22
    _NATIVE     shift, and go to state 23
    _OVERRIDE   shift, and go to state 24
    _STATIC     shift, and go to state 25
    LBRACE      shift, and go to state 26
    IDENT       shift, and go to state 27

    statement            go to state 224
    importStatement      go to state 32
    block                go to state 33
    variableDeclaration  go to state 34
    variableName         go to state 35
    variableKind         go to state 36
    assignStatement      go to state 37
    functionStatement    go to state 38
    functionDeclaration  go to state 39
    functionCall         go to state 40
    packageStatement     go to state 41
    objectInitializer    go to state 42
    superStatement       go to state 43
    returnStatement      go to state 44
    classStatement       go to state 45
    modifier             go to state 46
    modifierSuffix       go to state 47
    modifierPrefix       go to state 48
    prefixKeyword        go to state 49
    suffixKeyword        go to state 50
    ifStatement          go to state 51
    whileStatement       go to state 52
    forStatement         go to state 53
    iterationStatement   go to state 54
    throwStatement       go to state 55
    tryStatement         go to state 56
    withStatement        go to state 57
    continueStatement    go to state 58
    breakStatement       go to state 59


state 198

   74 objectInitializer: LBRACE variableDeclarationList RBRACE optionalVariableType .

    $default  reduce using rule 74 (objectInitializer)


state 199

   30 variableDeclarationList: variableDeclarationList COMMA variableBinding .

    $default  reduce using rule 30 (variableDeclarationList)


state 200

   35 optionalVariableType: COLON variableName .

    $default  reduce using rule 35 (optionalVariableType)


state 201

   39 variableInitialization: ASSIGN . value

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    LBRACE     shift, and go to state 63
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    value              go to state 225
    newObject          go to state 72
    functionCall       go to state 73
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 202

   31 variableBinding: variableName optionalVariableType variableInitialization .

    $default  reduce using rule 31 (variableBinding)


state 203

   67 functionCall: variableName LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 67 (functionCall)


state 204

   66 functionCall: variableName LPAREN valueList RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 226


state 205

   44 valueList: valueList COMMA . value

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    LBRACE     shift, and go to state 63
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    value              go to state 227
    newObject          go to state 72
    functionCall       go to state 73
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 206

   40 assignStatement: variableName assign value SEMICOLON .

    $default  reduce using rule 40 (assignStatement)


state 207

   82 classStatement: modifier _CLASS IDENT _EXTENDS . IDENT block

    IDENT  shift, and go to state 228


state 208

   80 classStatement: modifier _CLASS IDENT block .

    $default  reduce using rule 80 (classStatement)


state 209

   62 functionDeclaration: modifier _FUNCTION getterSetter IDENT . functionHeader

    LPAREN  shift, and go to state 188

    functionHeader  go to state 229


state 210

   28 variableDeclaration: modifier variableKind variableDeclarationList SEMICOLON .

    $default  reduce using rule 28 (variableDeclaration)


state 211

  108 expression: LPAREN variableName logicalOperator expression . RPAREN

    RPAREN  shift, and go to state 230


state 212

   57 newObject: _NEW IDENT LPAREN RPAREN . optionalVariableType

    COLON  shift, and go to state 152

    COLON     [reduce using rule 34 (optionalVariableType)]
    $default  reduce using rule 34 (optionalVariableType)

    optionalVariableType  go to state 231


state 213

   30 variableDeclarationList: variableDeclarationList . COMMA variableBinding
   58 newObject: _NEW IDENT LPAREN variableDeclarationList . RPAREN optionalVariableType

    RPAREN  shift, and go to state 232
    COMMA   shift, and go to state 151


state 214

  114 arrayAccessor: value LBRACKET accessValue RBRACKET .

    $default  reduce using rule 114 (arrayAccessor)


state 215

   73 ternaryExpression: expression _TERNARY value COLON . value

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    LBRACE     shift, and go to state 63
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    value              go to state 233
    newObject          go to state 72
    functionCall       go to state 73
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 216

   81 classStatement: _CLASS IDENT _EXTENDS IDENT block .

    $default  reduce using rule 81 (classStatement)


state 217

  113 forStatement: _FOR _EACH LPAREN _VAR variableName . _IN value RPAREN block

    _IN  shift, and go to state 234


state 218

  112 forStatement: _FOR LPAREN _VAR IDENT expression . SEMICOLON mathExpression RPAREN block

    SEMICOLON  shift, and go to state 235


state 219

   70 functionHeader: LPAREN RPAREN . block
   71               | LPAREN RPAREN . COLON variableName block

    LBRACE  shift, and go to state 26
    COLON   shift, and go to state 236

    block              go to state 237
    objectInitializer  go to state 42


state 220

   30 variableDeclarationList: variableDeclarationList . COMMA variableBinding
   68 functionHeader: LPAREN variableDeclarationList . RPAREN block
   69               | LPAREN variableDeclarationList . RPAREN COLON variableName block

    RPAREN  shift, and go to state 238
    COMMA   shift, and go to state 151


state 221

  107 elseStatement: _ELSE statement .

    $default  reduce using rule 107 (elseStatement)


state 222

   75 superStatement: _SUPER LPAREN value RPAREN SEMICOLON .

    $default  reduce using rule 75 (superStatement)


state 223

  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET
  145 catch: _CATCH LPAREN value . RPAREN statement

    RPAREN    shift, and go to state 239
    LBRACKET  shift, and go to state 126


state 224

  147 withStatement: _WITH LPAREN expression RPAREN statement .

    $default  reduce using rule 147 (withStatement)


state 225

   39 variableInitialization: ASSIGN value .
  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 126

    $default  reduce using rule 39 (variableInitialization)


state 226

   66 functionCall: variableName LPAREN valueList RPAREN SEMICOLON .

    $default  reduce using rule 66 (functionCall)


state 227

   44 valueList: valueList COMMA value .
  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 126

    $default  reduce using rule 44 (valueList)


state 228

   82 classStatement: modifier _CLASS IDENT _EXTENDS IDENT . block

    LBRACE  shift, and go to state 26

    block              go to state 240
    objectInitializer  go to state 42


state 229

   62 functionDeclaration: modifier _FUNCTION getterSetter IDENT functionHeader .

    $default  reduce using rule 62 (functionDeclaration)


state 230

  108 expression: LPAREN variableName logicalOperator expression RPAREN .

    $default  reduce using rule 108 (expression)


state 231

   57 newObject: _NEW IDENT LPAREN RPAREN optionalVariableType .

    $default  reduce using rule 57 (newObject)


state 232

   58 newObject: _NEW IDENT LPAREN variableDeclarationList RPAREN . optionalVariableType

    COLON  shift, and go to state 152

    COLON     [reduce using rule 34 (optionalVariableType)]
    $default  reduce using rule 34 (optionalVariableType)

    optionalVariableType  go to state 241


state 233

   73 ternaryExpression: expression _TERNARY value COLON value .
  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 126

    LBRACKET  [reduce using rule 73 (ternaryExpression)]
    $default  reduce using rule 73 (ternaryExpression)


state 234

  113 forStatement: _FOR _EACH LPAREN _VAR variableName _IN . value RPAREN block

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    LBRACE     shift, and go to state 63
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    value              go to state 242
    newObject          go to state 72
    functionCall       go to state 73
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 235

  112 forStatement: _FOR LPAREN _VAR IDENT expression SEMICOLON . mathExpression RPAREN block

    IDENT  shift, and go to state 27

    variableName    go to state 243
    mathExpression  go to state 244


state 236

   71 functionHeader: LPAREN RPAREN COLON . variableName block

    IDENT  shift, and go to state 27

    variableName  go to state 245


state 237

   70 functionHeader: LPAREN RPAREN block .

    $default  reduce using rule 70 (functionHeader)


state 238

   68 functionHeader: LPAREN variableDeclarationList RPAREN . block
   69               | LPAREN variableDeclarationList RPAREN . COLON variableName block

    LBRACE  shift, and go to state 26
    COLON   shift, and go to state 246

    block              go to state 247
    objectInitializer  go to state 42


state 239

  145 catch: _CATCH LPAREN value RPAREN . statement

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _DYNAMIC    shift, and go to state 21
    _FINAL      shift, and go to state 22
    _NATIVE     shift, and go to state 23
    _OVERRIDE   shift, and go to state 24
    _STATIC     shift, and go to state 25
    LBRACE      shift, and go to state 26
    IDENT       shift, and go to state 27

    statement            go to state 248
    importStatement      go to state 32
    block                go to state 33
    variableDeclaration  go to state 34
    variableName         go to state 35
    variableKind         go to state 36
    assignStatement      go to state 37
    functionStatement    go to state 38
    functionDeclaration  go to state 39
    functionCall         go to state 40
    packageStatement     go to state 41
    objectInitializer    go to state 42
    superStatement       go to state 43
    returnStatement      go to state 44
    classStatement       go to state 45
    modifier             go to state 46
    modifierSuffix       go to state 47
    modifierPrefix       go to state 48
    prefixKeyword        go to state 49
    suffixKeyword        go to state 50
    ifStatement          go to state 51
    whileStatement       go to state 52
    forStatement         go to state 53
    iterationStatement   go to state 54
    throwStatement       go to state 55
    tryStatement         go to state 56
    withStatement        go to state 57
    continueStatement    go to state 58
    breakStatement       go to state 59


state 240

   82 classStatement: modifier _CLASS IDENT _EXTENDS IDENT block .

    $default  reduce using rule 82 (classStatement)


state 241

   58 newObject: _NEW IDENT LPAREN variableDeclarationList RPAREN optionalVariableType .

    $default  reduce using rule 58 (newObject)


state 242

  113 forStatement: _FOR _EACH LPAREN _VAR variableName _IN value . RPAREN block
  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET

    RPAREN    shift, and go to state 249
    LBRACKET  shift, and go to state 126


state 243

  132 mathExpression: variableName . INCREMENT
  133               | variableName . DECREMENT
  134               | variableName . pemd variableName
  135               | variableName . as variableName

    PLUS       shift, and go to state 250
    MINUS      shift, and go to state 251
    MULTIPLY   shift, and go to state 252
    DIVIDE     shift, and go to state 253
    MODULO     shift, and go to state 254
    INCREMENT  shift, and go to state 255
    DECREMENT  shift, and go to state 256
    _AS        shift, and go to state 257

    $default  reduce using rule 42 (as)

    as    go to state 258
    pemd  go to state 259


state 244

  112 forStatement: _FOR LPAREN _VAR IDENT expression SEMICOLON mathExpression . RPAREN block

    RPAREN  shift, and go to state 260


state 245

   71 functionHeader: LPAREN RPAREN COLON variableName . block

    LBRACE  shift, and go to state 26

    block              go to state 261
    objectInitializer  go to state 42


state 246

   69 functionHeader: LPAREN variableDeclarationList RPAREN COLON . variableName block

    IDENT  shift, and go to state 27

    variableName  go to state 262


state 247

   68 functionHeader: LPAREN variableDeclarationList RPAREN block .

    $default  reduce using rule 68 (functionHeader)


state 248

  145 catch: _CATCH LPAREN value RPAREN statement .

    $default  reduce using rule 145 (catch)


state 249

  113 forStatement: _FOR _EACH LPAREN _VAR variableName _IN value RPAREN . block

    LBRACE  shift, and go to state 26

    block              go to state 263
    objectInitializer  go to state 42


state 250

  139 as: PLUS .

    $default  reduce using rule 139 (as)


state 251

  140 as: MINUS .

    $default  reduce using rule 140 (as)


state 252

  136 pemd: MULTIPLY .

    $default  reduce using rule 136 (pemd)


state 253

  137 pemd: DIVIDE .

    $default  reduce using rule 137 (pemd)


state 254

  138 pemd: MODULO .

    $default  reduce using rule 138 (pemd)


state 255

  132 mathExpression: variableName INCREMENT .

    $default  reduce using rule 132 (mathExpression)


state 256

  133 mathExpression: variableName DECREMENT .

    $default  reduce using rule 133 (mathExpression)


state 257

   41 as: _AS . value

    _NULL      shift, and go to state 60
    _THIS      shift, and go to state 61
    LPAREN     shift, and go to state 62
    LBRACE     shift, and go to state 63
    _TRUE      shift, and go to state 65
    _FALSE     shift, and go to state 66
    _NEW       shift, and go to state 67
    STRINGLIT  shift, and go to state 68
    NUMBERLIT  shift, and go to state 69
    IDENT      shift, and go to state 27

    variableName       go to state 70
    value              go to state 264
    newObject          go to state 72
    functionCall       go to state 73
    ternaryExpression  go to state 74
    objectInitializer  go to state 75
    expression         go to state 76
    arrayAccessor      go to state 77


state 258

  135 mathExpression: variableName as . variableName

    IDENT  shift, and go to state 27

    variableName  go to state 265


state 259

  134 mathExpression: variableName pemd . variableName

    IDENT  shift, and go to state 27

    variableName  go to state 266


state 260

  112 forStatement: _FOR LPAREN _VAR IDENT expression SEMICOLON mathExpression RPAREN . block

    LBRACE  shift, and go to state 26

    block              go to state 267
    objectInitializer  go to state 42


state 261

   71 functionHeader: LPAREN RPAREN COLON variableName block .

    $default  reduce using rule 71 (functionHeader)


state 262

   69 functionHeader: LPAREN variableDeclarationList RPAREN COLON variableName . block

    LBRACE  shift, and go to state 26

    block              go to state 268
    objectInitializer  go to state 42


state 263

  113 forStatement: _FOR _EACH LPAREN _VAR variableName _IN value RPAREN block .

    $default  reduce using rule 113 (forStatement)


state 264

   41 as: _AS value .
  114 arrayAccessor: value . LBRACKET accessValue RBRACKET
  115              | value . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 126

    $default  reduce using rule 41 (as)


state 265

  135 mathExpression: variableName as variableName .

    $default  reduce using rule 135 (mathExpression)


state 266

  134 mathExpression: variableName pemd variableName .

    $default  reduce using rule 134 (mathExpression)


state 267

  112 forStatement: _FOR LPAREN _VAR IDENT expression SEMICOLON mathExpression RPAREN block .

    $default  reduce using rule 112 (forStatement)


state 268

   69 functionHeader: LPAREN variableDeclarationList RPAREN COLON variableName block .

    $default  reduce using rule 69 (functionHeader)

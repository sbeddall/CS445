Terminals unused in grammar

   _CASE
   _DEFAULT
   _DO
   _IMPLEMENTS
   _INTERFACE
   _INTERNAL
   _SWITCH
   _TO
   _USE
   _NAMESPACE
   _INCLUDE
   QUOTES
   ARRAY
   OBJECT
   FUNCTION
   _DELETE
   _TYPEOF
   _INSTANCEOF
   _IS
   OTHER


State 76 conflicts: 7 shift/reduce
State 97 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce
State 153 conflicts: 1 shift/reduce
State 163 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 202 conflicts: 3 shift/reduce
State 203 conflicts: 3 shift/reduce
State 204 conflicts: 3 shift/reduce
State 205 conflicts: 3 shift/reduce
State 206 conflicts: 7 shift/reduce
State 243 conflicts: 1 shift/reduce
State 264 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: sourceElements

    2 sourceElements: sourceElement
    3               | sourceElement sourceElements

    4 sourceElement: statement

    5 statement: block
    6          | variableDeclaration
    7          | importStatement
    8          | functionStatement
    9          | forStatement
   10          | ifStatement
   11          | whileStatement
   12          | continueStatement
   13          | breakStatement
   14          | withStatement
   15          | throwStatement
   16          | tryStatement
   17          | iterationStatement
   18          | superStatement
   19          | classStatement
   20          | packageStatement
   21          | returnStatement
   22          | assignStatement

   23 importStatement: _IMPORT variableName SEMICOLON

   24 block: LBRACE RBRACE
   25      | LBRACE sourceElements RBRACE
   26      | objectInitializer

   27 variableDeclaration: variableKind variableDeclarationList SEMICOLON
   28                    | modifier variableKind variableDeclarationList SEMICOLON

   29 variableDeclarationList: variableBinding
   30                        | variableDeclarationList COMMA variableBinding

   31 variableBinding: variableName optionalVariableType variableInitialization

   32 variableName: IDENT
   33             | IDENT ACCESSDOT variableName

   34 optionalVariableType: /* empty */
   35                     | COLON variableName
   36                     | COLON nativeType

   37 variableKind: _VAR
   38             | _CONST

   39 variableInitialization: /* empty */
   40                       | ASSIGN value

   41 assignStatement: variableName assign value SEMICOLON

   42 valueList: value
   43          | valueList COMMA value

   44 value: newObject
   45      | STRINGLIT
   46      | objectInitializer
   47      | _NULL
   48      | _THIS
   49      | _TRUE
   50      | _FALSE
   51      | expression
   52      | expr

   53 mathValue: NUMBERLIT
   54          | arrayAccessor
   55          | variableName
   56          | functionCall
   57          | ternaryExpression
   58          | MINUS mathValue
   59          | PLUS mathValue

   60 expr: mathValue
   61     | expr PLUS expr
   62     | expr MINUS expr
   63     | expr MULTIPLY expr
   64     | expr DIVIDE expr
   65     | expr MODULO expr
   66     | expr INCREMENT
   67     | expr DECREMENT

   68 nativeType: _UINT
   69           | _INT
   70           | _BOOLEAN
   71           | _NUMBER
   72           | _STRING
   73           | _VOID
   74           | _NULL

   75 newObject: _NEW IDENT LPAREN RPAREN optionalVariableType as
   76          | _NEW IDENT LPAREN valueList RPAREN optionalVariableType as

   77 as: _AS variableName
   78   | /* empty */

   79 functionStatement: functionCall SEMICOLON
   80                  | functionDeclaration

   81 functionDeclaration: _FUNCTION getterSetter IDENT functionHeader
   82                    | modifier _FUNCTION getterSetter IDENT functionHeader

   83 getterSetter: _GET
   84             | _SET
   85             | /* empty */

   86 functionCall: variableName LPAREN valueList RPAREN
   87             | variableName LPAREN RPAREN

   88 functionHeader: LPAREN variableDeclarationList RPAREN block
   89               | LPAREN variableDeclarationList RPAREN COLON variableName block
   90               | LPAREN RPAREN block
   91               | LPAREN RPAREN COLON variableName block

   92 packageStatement: _PACKAGE variableName block
   93                 | _PACKAGE block

   94 ternaryExpression: expression _TERNARY value COLON value

   95 objectInitializer: LBRACE variableDeclarationList RBRACE optionalVariableType

   96 superStatement: _SUPER LPAREN value RPAREN SEMICOLON

   97 returnStatement: _RETURN value SEMICOLON
   98                | _RETURN functionCall SEMICOLON
   99                | _RETURN LBRACKET RBRACKET SEMICOLON

  100 classStatement: _CLASS IDENT block
  101               | modifier _CLASS IDENT block
  102               | _CLASS IDENT _EXTENDS IDENT block
  103               | modifier _CLASS IDENT _EXTENDS IDENT block

  104 modifier: modifierPrefix modifierSuffix
  105         | modifierPrefix
  106         | modifierSuffix

  107 modifierSuffix: suffixKeyword
  108               | suffixKeyword modifierSuffix

  109 modifierPrefix: prefixKeyword
  110               | prefixKeyword modifierPrefix

  111 prefixKeyword: _PUBLIC
  112              | _PRIVATE
  113              | _PROTECTED
  114              | _OVERRIDE

  115 suffixKeyword: _DYNAMIC
  116              | _FINAL
  117              | _NATIVE
  118              | _STATIC
  119              | _GET
  120              | _SET

  121 assign: ASSIGN
  122       | MULTIPLYEQ
  123       | DIVIDEEQ
  124       | MODULOEQ
  125       | PLUSEQ
  126       | MINUSEQ

  127 ifStatement: _IF expression statement
  128            | _IF expression statement elseStatement

  129 elseStatement: _ELSE statement

  130 expression: LPAREN value logicalOperator expression RPAREN
  131           | LPAREN value RPAREN

  132 whileStatement: _WHILE value block

  133 forStatement: _FOR LPAREN variableDeclaration SEMICOLON optionalForConditional SEMICOLON optionalForIncrement SEMICOLON
  134             | _FOR LPAREN _VAR variableName optionalVariableType _IN value RPAREN
  135             | _FOR _EACH LPAREN _VAR variableName optionalVariableType _IN value RPAREN

  136 optionalForConditional: /* empty */
  137                       | mathValue

  138 optionalForIncrement: /* empty */
  139                     | mathValue

  140 arrayAccessor: variableName LBRACKET accessValue RBRACKET
  141              | variableName LBRACKET RBRACKET

  142 accessValue: NUMBERLIT
  143            | variableName

  144 logicalOperator: LESSTHAN
  145                | GREATERTHAN
  146                | EQUALSEQUALS
  147                | STRICTEQUALS
  148                | STRICTNOTEQ
  149                | GTHANEQ
  150                | LTHANEQ
  151                | NOTEQUAL
  152                | NOT
  153                | NOTEQUALEQUAL
  154                | LOGICALAND
  155                | LOGICALOR

  156 iterationStatement: variableName INCREMENT SEMICOLON
  157                   | variableName DECREMENT SEMICOLON

  158 throwStatement: _THROW value SEMICOLON

  159 tryStatement: _TRY statement catch
  160             | _TRY statement finally
  161             | _TRY statement catch finally

  162 catch: _CATCH LPAREN value RPAREN statement

  163 finally: _FINALLY statement

  164 withStatement: _WITH LPAREN expression RPAREN statement

  165 continueStatement: _CONTINUE SEMICOLON
  166                  | _CONTINUE value SEMICOLON

  167 breakStatement: _BREAK SEMICOLON
  168               | _BREAK value SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_BREAK (261) 167 168
_CATCH (262) 162
_CLASS (263) 100 101 102 103
_CONST (264) 38
_CONTINUE (265) 165 166
_DEFAULT (266)
_ELSE (267) 129
_EXTENDS (268) 102 103
_FINALLY (270) 163
_FOR (271) 133 134 135
_FUNCTION (272) 81 82
_IF (273) 127 128
_IMPLEMENTS (274)
_IMPORT (275) 23
_INTERFACE (276)
_INTERNAL (277)
_NULL (278) 47 74
_PACKAGE (279) 92 93
_PRIVATE (280) 112
_PROTECTED (281) 113
_PUBLIC (282) 111
_RETURN (283) 97 98 99
_SUPER (284) 96
_SWITCH (285)
_THIS (286) 48
_THROW (287) 158
_TO (288)
_TRY (289) 159 160 161
_USE (290)
_VAR (291) 37 134 135
_WHILE (292) 132
_WITH (293) 164
_EACH (294) 135
_GET (295) 83 119
_SET (296) 84 120
_NAMESPACE (297)
_INCLUDE (298)
_DYNAMIC (299) 115
_FINAL (300) 116
_NATIVE (301) 117
_OVERRIDE (302) 114
_STATIC (303) 118
LPAREN (304) 75 76 86 87 88 89 90 91 96 130 131 133 134 135 162 164
RPAREN (305) 75 76 86 87 88 89 90 91 96 130 131 134 135 162 164
LBRACE (306) 24 25 95
RBRACE (307) 24 25 95
LBRACKET (308) 99 140 141
RBRACKET (309) 99 140 141
SEMICOLON (310) 23 27 28 41 79 96 97 98 99 133 156 157 158 165 166
    167 168
QUOTES (311)
COMMA (312) 30 43
COLON (313) 35 36 89 91 94
PLUS (314) 59 61
MINUS (315) 58 62
MULTIPLY (316) 63
DIVIDE (317) 64
MODULO (318) 65
LESSTHAN (319) 144
GREATERTHAN (320) 145
EQUALSEQUALS (321) 146
STRICTEQUALS (322) 147
STRICTNOTEQ (323) 148
GTHANEQ (324) 149
LTHANEQ (325) 150
NOTEQUAL (326) 151
NOT (327) 152
NOTEQUALEQUAL (328) 153
LOGICALAND (329) 154
LOGICALOR (330) 155
_STRING (331) 72
_NUMBER (332) 71
_TRUE (334) 49
_FALSE (335) 50
ARRAY (336)
OBJECT (337)
FUNCTION (338)
ACCESSDOT (339) 33
INCREMENT (341) 66 156
DECREMENT (342) 67 157
_NEW (343) 75 76
_DELETE (344)
_TYPEOF (345)
_AS (347) 77
_IN (348) 134 135
_INSTANCEOF (349)
_IS (350)
_TERNARY (351) 94
ASSIGN (352) 40 121
MULTIPLYEQ (353) 122
DIVIDEEQ (354) 123
MODULOEQ (355) 124
PLUSEQ (356) 125
MINUSEQ (357) 126
IDENT (358) 32 33 75 76 81 82 100 101 102 103
_UINT (359) 68
_INT (360) 69
_BOOLEAN (361) 70
_DO (362)
_CASE (363)
STRINGLIT (365) 45
NUMBERLIT (366) 53 142
_VOID (367) 73
OTHER (400)


Nonterminals, with rules where they appear

$accept (106)
    on left: 0
program (107)
    on left: 1, on right: 0
sourceElements (108)
    on left: 2 3, on right: 1 3 25
sourceElement (109)
    on left: 4, on right: 2 3
statement (110)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22, on right:
    4 127 128 129 159 160 161 162 163 164
importStatement (111)
    on left: 23, on right: 7
block (112)
    on left: 24 25 26, on right: 5 88 89 90 91 92 93 100 101 102 103
    132
variableDeclaration (113)
    on left: 27 28, on right: 6 133
variableDeclarationList (114)
    on left: 29 30, on right: 27 28 30 88 89 95
variableBinding (115)
    on left: 31, on right: 29 30
variableName (116)
    on left: 32 33, on right: 23 31 33 35 41 55 77 86 87 89 91 92 134
    135 140 141 143 156 157
optionalVariableType (117)
    on left: 34 35 36, on right: 31 75 76 95 134 135
variableKind (118)
    on left: 37 38, on right: 27 28
variableInitialization (119)
    on left: 39 40, on right: 31
assignStatement (120)
    on left: 41, on right: 22
valueList (121)
    on left: 42 43, on right: 43 76 86
value (122)
    on left: 44 45 46 47 48 49 50 51 52, on right: 40 41 42 43 94 96
    97 130 131 132 134 135 158 162 166 168
mathValue (123)
    on left: 53 54 55 56 57 58 59, on right: 58 59 60 137 139
expr (124)
    on left: 60 61 62 63 64 65 66 67, on right: 52 61 62 63 64 65 66
    67
nativeType (125)
    on left: 68 69 70 71 72 73 74, on right: 36
newObject (126)
    on left: 75 76, on right: 44
as (127)
    on left: 77 78, on right: 75 76
functionStatement (128)
    on left: 79 80, on right: 8
functionDeclaration (129)
    on left: 81 82, on right: 80
getterSetter (130)
    on left: 83 84 85, on right: 81 82
functionCall (131)
    on left: 86 87, on right: 56 79 98
functionHeader (132)
    on left: 88 89 90 91, on right: 81 82
packageStatement (133)
    on left: 92 93, on right: 20
ternaryExpression (134)
    on left: 94, on right: 57
objectInitializer (135)
    on left: 95, on right: 26 46
superStatement (136)
    on left: 96, on right: 18
returnStatement (137)
    on left: 97 98 99, on right: 21
classStatement (138)
    on left: 100 101 102 103, on right: 19
modifier (139)
    on left: 104 105 106, on right: 28 82 101 103
modifierSuffix (140)
    on left: 107 108, on right: 104 106 108
modifierPrefix (141)
    on left: 109 110, on right: 104 105 110
prefixKeyword (142)
    on left: 111 112 113 114, on right: 109 110
suffixKeyword (143)
    on left: 115 116 117 118 119 120, on right: 107 108
assign (144)
    on left: 121 122 123 124 125 126, on right: 41
ifStatement (145)
    on left: 127 128, on right: 10
elseStatement (146)
    on left: 129, on right: 128
expression (147)
    on left: 130 131, on right: 51 94 127 128 130 164
whileStatement (148)
    on left: 132, on right: 11
forStatement (149)
    on left: 133 134 135, on right: 9
optionalForConditional (150)
    on left: 136 137, on right: 133
optionalForIncrement (151)
    on left: 138 139, on right: 133
arrayAccessor (152)
    on left: 140 141, on right: 54
accessValue (153)
    on left: 142 143, on right: 140
logicalOperator (154)
    on left: 144 145 146 147 148 149 150 151 152 153 154 155, on right:
    130
iterationStatement (155)
    on left: 156 157, on right: 17
throwStatement (156)
    on left: 158, on right: 15
tryStatement (157)
    on left: 159 160 161, on right: 16
catch (158)
    on left: 162, on right: 159 161
finally (159)
    on left: 163, on right: 160 161
withStatement (160)
    on left: 164, on right: 14
continueStatement (161)
    on left: 165 166, on right: 12
breakStatement (162)
    on left: 167 168, on right: 13


state 0

    0 $accept: . program $end

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _SET        shift, and go to state 21
    _DYNAMIC    shift, and go to state 22
    _FINAL      shift, and go to state 23
    _NATIVE     shift, and go to state 24
    _OVERRIDE   shift, and go to state 25
    _STATIC     shift, and go to state 26
    LBRACE      shift, and go to state 27
    IDENT       shift, and go to state 28

    program              go to state 29
    sourceElements       go to state 30
    sourceElement        go to state 31
    statement            go to state 32
    importStatement      go to state 33
    block                go to state 34
    variableDeclaration  go to state 35
    variableName         go to state 36
    variableKind         go to state 37
    assignStatement      go to state 38
    functionStatement    go to state 39
    functionDeclaration  go to state 40
    functionCall         go to state 41
    packageStatement     go to state 42
    objectInitializer    go to state 43
    superStatement       go to state 44
    returnStatement      go to state 45
    classStatement       go to state 46
    modifier             go to state 47
    modifierSuffix       go to state 48
    modifierPrefix       go to state 49
    prefixKeyword        go to state 50
    suffixKeyword        go to state 51
    ifStatement          go to state 52
    whileStatement       go to state 53
    forStatement         go to state 54
    iterationStatement   go to state 55
    throwStatement       go to state 56
    tryStatement         go to state 57
    withStatement        go to state 58
    continueStatement    go to state 59
    breakStatement       go to state 60


state 1

  167 breakStatement: _BREAK . SEMICOLON
  168               | _BREAK . value SEMICOLON

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    SEMICOLON  shift, and go to state 65
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 74
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 2

  100 classStatement: _CLASS . IDENT block
  102               | _CLASS . IDENT _EXTENDS IDENT block

    IDENT  shift, and go to state 83


state 3

   38 variableKind: _CONST .

    $default  reduce using rule 38 (variableKind)


state 4

  165 continueStatement: _CONTINUE . SEMICOLON
  166                  | _CONTINUE . value SEMICOLON

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    SEMICOLON  shift, and go to state 84
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 85
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 5

  133 forStatement: _FOR . LPAREN variableDeclaration SEMICOLON optionalForConditional SEMICOLON optionalForIncrement SEMICOLON
  134             | _FOR . LPAREN _VAR variableName optionalVariableType _IN value RPAREN
  135             | _FOR . _EACH LPAREN _VAR variableName optionalVariableType _IN value RPAREN

    _EACH   shift, and go to state 86
    LPAREN  shift, and go to state 87


state 6

   81 functionDeclaration: _FUNCTION . getterSetter IDENT functionHeader

    _GET  shift, and go to state 88
    _SET  shift, and go to state 89

    $default  reduce using rule 85 (getterSetter)

    getterSetter  go to state 90


state 7

  127 ifStatement: _IF . expression statement
  128            | _IF . expression statement elseStatement

    LPAREN  shift, and go to state 63

    expression  go to state 91


state 8

   23 importStatement: _IMPORT . variableName SEMICOLON

    IDENT  shift, and go to state 28

    variableName  go to state 92


state 9

   92 packageStatement: _PACKAGE . variableName block
   93                 | _PACKAGE . block

    LBRACE  shift, and go to state 27
    IDENT   shift, and go to state 28

    block              go to state 93
    variableName       go to state 94
    objectInitializer  go to state 43


state 10

  112 prefixKeyword: _PRIVATE .

    $default  reduce using rule 112 (prefixKeyword)


state 11

  113 prefixKeyword: _PROTECTED .

    $default  reduce using rule 113 (prefixKeyword)


state 12

  111 prefixKeyword: _PUBLIC .

    $default  reduce using rule 111 (prefixKeyword)


state 13

   97 returnStatement: _RETURN . value SEMICOLON
   98                | _RETURN . functionCall SEMICOLON
   99                | _RETURN . LBRACKET RBRACKET SEMICOLON

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    LBRACKET   shift, and go to state 95
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 96
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 97
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 14

   96 superStatement: _SUPER . LPAREN value RPAREN SEMICOLON

    LPAREN  shift, and go to state 98


state 15

  158 throwStatement: _THROW . value SEMICOLON

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 99
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 16

  159 tryStatement: _TRY . statement catch
  160             | _TRY . statement finally
  161             | _TRY . statement catch finally

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _SET        shift, and go to state 21
    _DYNAMIC    shift, and go to state 22
    _FINAL      shift, and go to state 23
    _NATIVE     shift, and go to state 24
    _OVERRIDE   shift, and go to state 25
    _STATIC     shift, and go to state 26
    LBRACE      shift, and go to state 27
    IDENT       shift, and go to state 28

    statement            go to state 100
    importStatement      go to state 33
    block                go to state 34
    variableDeclaration  go to state 35
    variableName         go to state 36
    variableKind         go to state 37
    assignStatement      go to state 38
    functionStatement    go to state 39
    functionDeclaration  go to state 40
    functionCall         go to state 41
    packageStatement     go to state 42
    objectInitializer    go to state 43
    superStatement       go to state 44
    returnStatement      go to state 45
    classStatement       go to state 46
    modifier             go to state 47
    modifierSuffix       go to state 48
    modifierPrefix       go to state 49
    prefixKeyword        go to state 50
    suffixKeyword        go to state 51
    ifStatement          go to state 52
    whileStatement       go to state 53
    forStatement         go to state 54
    iterationStatement   go to state 55
    throwStatement       go to state 56
    tryStatement         go to state 57
    withStatement        go to state 58
    continueStatement    go to state 59
    breakStatement       go to state 60


state 17

   37 variableKind: _VAR .

    $default  reduce using rule 37 (variableKind)


state 18

  132 whileStatement: _WHILE . value block

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 101
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 19

  164 withStatement: _WITH . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 102


state 20

  119 suffixKeyword: _GET .

    $default  reduce using rule 119 (suffixKeyword)


state 21

  120 suffixKeyword: _SET .

    $default  reduce using rule 120 (suffixKeyword)


state 22

  115 suffixKeyword: _DYNAMIC .

    $default  reduce using rule 115 (suffixKeyword)


state 23

  116 suffixKeyword: _FINAL .

    $default  reduce using rule 116 (suffixKeyword)


state 24

  117 suffixKeyword: _NATIVE .

    $default  reduce using rule 117 (suffixKeyword)


state 25

  114 prefixKeyword: _OVERRIDE .

    $default  reduce using rule 114 (prefixKeyword)


state 26

  118 suffixKeyword: _STATIC .

    $default  reduce using rule 118 (suffixKeyword)


state 27

   24 block: LBRACE . RBRACE
   25      | LBRACE . sourceElements RBRACE
   95 objectInitializer: LBRACE . variableDeclarationList RBRACE optionalVariableType

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _SET        shift, and go to state 21
    _DYNAMIC    shift, and go to state 22
    _FINAL      shift, and go to state 23
    _NATIVE     shift, and go to state 24
    _OVERRIDE   shift, and go to state 25
    _STATIC     shift, and go to state 26
    LBRACE      shift, and go to state 27
    RBRACE      shift, and go to state 103
    IDENT       shift, and go to state 28

    sourceElements           go to state 104
    sourceElement            go to state 31
    statement                go to state 32
    importStatement          go to state 33
    block                    go to state 34
    variableDeclaration      go to state 35
    variableDeclarationList  go to state 105
    variableBinding          go to state 106
    variableName             go to state 107
    variableKind             go to state 37
    assignStatement          go to state 38
    functionStatement        go to state 39
    functionDeclaration      go to state 40
    functionCall             go to state 41
    packageStatement         go to state 42
    objectInitializer        go to state 43
    superStatement           go to state 44
    returnStatement          go to state 45
    classStatement           go to state 46
    modifier                 go to state 47
    modifierSuffix           go to state 48
    modifierPrefix           go to state 49
    prefixKeyword            go to state 50
    suffixKeyword            go to state 51
    ifStatement              go to state 52
    whileStatement           go to state 53
    forStatement             go to state 54
    iterationStatement       go to state 55
    throwStatement           go to state 56
    tryStatement             go to state 57
    withStatement            go to state 58
    continueStatement        go to state 59
    breakStatement           go to state 60


state 28

   32 variableName: IDENT .
   33             | IDENT . ACCESSDOT variableName

    ACCESSDOT  shift, and go to state 108

    $default  reduce using rule 32 (variableName)


state 29

    0 $accept: program . $end

    $end  shift, and go to state 109


state 30

    1 program: sourceElements .

    $default  reduce using rule 1 (program)


state 31

    2 sourceElements: sourceElement .
    3               | sourceElement . sourceElements

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _SET        shift, and go to state 21
    _DYNAMIC    shift, and go to state 22
    _FINAL      shift, and go to state 23
    _NATIVE     shift, and go to state 24
    _OVERRIDE   shift, and go to state 25
    _STATIC     shift, and go to state 26
    LBRACE      shift, and go to state 27
    IDENT       shift, and go to state 28

    $default  reduce using rule 2 (sourceElements)

    sourceElements       go to state 110
    sourceElement        go to state 31
    statement            go to state 32
    importStatement      go to state 33
    block                go to state 34
    variableDeclaration  go to state 35
    variableName         go to state 36
    variableKind         go to state 37
    assignStatement      go to state 38
    functionStatement    go to state 39
    functionDeclaration  go to state 40
    functionCall         go to state 41
    packageStatement     go to state 42
    objectInitializer    go to state 43
    superStatement       go to state 44
    returnStatement      go to state 45
    classStatement       go to state 46
    modifier             go to state 47
    modifierSuffix       go to state 48
    modifierPrefix       go to state 49
    prefixKeyword        go to state 50
    suffixKeyword        go to state 51
    ifStatement          go to state 52
    whileStatement       go to state 53
    forStatement         go to state 54
    iterationStatement   go to state 55
    throwStatement       go to state 56
    tryStatement         go to state 57
    withStatement        go to state 58
    continueStatement    go to state 59
    breakStatement       go to state 60


state 32

    4 sourceElement: statement .

    $default  reduce using rule 4 (sourceElement)


state 33

    7 statement: importStatement .

    $default  reduce using rule 7 (statement)


state 34

    5 statement: block .

    $default  reduce using rule 5 (statement)


state 35

    6 statement: variableDeclaration .

    $default  reduce using rule 6 (statement)


state 36

   41 assignStatement: variableName . assign value SEMICOLON
   86 functionCall: variableName . LPAREN valueList RPAREN
   87             | variableName . LPAREN RPAREN
  156 iterationStatement: variableName . INCREMENT SEMICOLON
  157                   | variableName . DECREMENT SEMICOLON

    LPAREN      shift, and go to state 111
    INCREMENT   shift, and go to state 112
    DECREMENT   shift, and go to state 113
    ASSIGN      shift, and go to state 114
    MULTIPLYEQ  shift, and go to state 115
    DIVIDEEQ    shift, and go to state 116
    MODULOEQ    shift, and go to state 117
    PLUSEQ      shift, and go to state 118
    MINUSEQ     shift, and go to state 119

    assign  go to state 120


state 37

   27 variableDeclaration: variableKind . variableDeclarationList SEMICOLON

    IDENT  shift, and go to state 28

    variableDeclarationList  go to state 121
    variableBinding          go to state 106
    variableName             go to state 122


state 38

   22 statement: assignStatement .

    $default  reduce using rule 22 (statement)


state 39

    8 statement: functionStatement .

    $default  reduce using rule 8 (statement)


state 40

   80 functionStatement: functionDeclaration .

    $default  reduce using rule 80 (functionStatement)


state 41

   79 functionStatement: functionCall . SEMICOLON

    SEMICOLON  shift, and go to state 123


state 42

   20 statement: packageStatement .

    $default  reduce using rule 20 (statement)


state 43

   26 block: objectInitializer .

    $default  reduce using rule 26 (block)


state 44

   18 statement: superStatement .

    $default  reduce using rule 18 (statement)


state 45

   21 statement: returnStatement .

    $default  reduce using rule 21 (statement)


state 46

   19 statement: classStatement .

    $default  reduce using rule 19 (statement)


state 47

   28 variableDeclaration: modifier . variableKind variableDeclarationList SEMICOLON
   82 functionDeclaration: modifier . _FUNCTION getterSetter IDENT functionHeader
  101 classStatement: modifier . _CLASS IDENT block
  103               | modifier . _CLASS IDENT _EXTENDS IDENT block

    _CLASS     shift, and go to state 124
    _CONST     shift, and go to state 3
    _FUNCTION  shift, and go to state 125
    _VAR       shift, and go to state 17

    variableKind  go to state 126


state 48

  106 modifier: modifierSuffix .

    $default  reduce using rule 106 (modifier)


state 49

  104 modifier: modifierPrefix . modifierSuffix
  105         | modifierPrefix .

    _GET      shift, and go to state 20
    _SET      shift, and go to state 21
    _DYNAMIC  shift, and go to state 22
    _FINAL    shift, and go to state 23
    _NATIVE   shift, and go to state 24
    _STATIC   shift, and go to state 26

    $default  reduce using rule 105 (modifier)

    modifierSuffix  go to state 127
    suffixKeyword   go to state 51


state 50

  109 modifierPrefix: prefixKeyword .
  110               | prefixKeyword . modifierPrefix

    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _OVERRIDE   shift, and go to state 25

    $default  reduce using rule 109 (modifierPrefix)

    modifierPrefix  go to state 128
    prefixKeyword   go to state 50


state 51

  107 modifierSuffix: suffixKeyword .
  108               | suffixKeyword . modifierSuffix

    _GET      shift, and go to state 20
    _SET      shift, and go to state 21
    _DYNAMIC  shift, and go to state 22
    _FINAL    shift, and go to state 23
    _NATIVE   shift, and go to state 24
    _STATIC   shift, and go to state 26

    $default  reduce using rule 107 (modifierSuffix)

    modifierSuffix  go to state 129
    suffixKeyword   go to state 51


state 52

   10 statement: ifStatement .

    $default  reduce using rule 10 (statement)


state 53

   11 statement: whileStatement .

    $default  reduce using rule 11 (statement)


state 54

    9 statement: forStatement .

    $default  reduce using rule 9 (statement)


state 55

   17 statement: iterationStatement .

    $default  reduce using rule 17 (statement)


state 56

   15 statement: throwStatement .

    $default  reduce using rule 15 (statement)


state 57

   16 statement: tryStatement .

    $default  reduce using rule 16 (statement)


state 58

   14 statement: withStatement .

    $default  reduce using rule 14 (statement)


state 59

   12 statement: continueStatement .

    $default  reduce using rule 12 (statement)


state 60

   13 statement: breakStatement .

    $default  reduce using rule 13 (statement)


state 61

   47 value: _NULL .

    $default  reduce using rule 47 (value)


state 62

   48 value: _THIS .

    $default  reduce using rule 48 (value)


state 63

  130 expression: LPAREN . value logicalOperator expression RPAREN
  131           | LPAREN . value RPAREN

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 130
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 64

   95 objectInitializer: LBRACE . variableDeclarationList RBRACE optionalVariableType

    IDENT  shift, and go to state 28

    variableDeclarationList  go to state 105
    variableBinding          go to state 106
    variableName             go to state 122


state 65

  167 breakStatement: _BREAK SEMICOLON .

    $default  reduce using rule 167 (breakStatement)


state 66

   59 mathValue: PLUS . mathValue

    LPAREN     shift, and go to state 63
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    mathValue          go to state 131
    functionCall       go to state 78
    ternaryExpression  go to state 79
    expression         go to state 132
    arrayAccessor      go to state 82


state 67

   58 mathValue: MINUS . mathValue

    LPAREN     shift, and go to state 63
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    mathValue          go to state 133
    functionCall       go to state 78
    ternaryExpression  go to state 79
    expression         go to state 132
    arrayAccessor      go to state 82


state 68

   49 value: _TRUE .

    $default  reduce using rule 49 (value)


state 69

   50 value: _FALSE .

    $default  reduce using rule 50 (value)


state 70

   75 newObject: _NEW . IDENT LPAREN RPAREN optionalVariableType as
   76          | _NEW . IDENT LPAREN valueList RPAREN optionalVariableType as

    IDENT  shift, and go to state 134


state 71

   45 value: STRINGLIT .

    $default  reduce using rule 45 (value)


state 72

   53 mathValue: NUMBERLIT .

    $default  reduce using rule 53 (mathValue)


state 73

   55 mathValue: variableName .
   86 functionCall: variableName . LPAREN valueList RPAREN
   87             | variableName . LPAREN RPAREN
  140 arrayAccessor: variableName . LBRACKET accessValue RBRACKET
  141              | variableName . LBRACKET RBRACKET

    LPAREN    shift, and go to state 111
    LBRACKET  shift, and go to state 135

    $default  reduce using rule 55 (mathValue)


state 74

  168 breakStatement: _BREAK value . SEMICOLON

    SEMICOLON  shift, and go to state 136


state 75

   60 expr: mathValue .

    $default  reduce using rule 60 (expr)


state 76

   52 value: expr .
   61 expr: expr . PLUS expr
   62     | expr . MINUS expr
   63     | expr . MULTIPLY expr
   64     | expr . DIVIDE expr
   65     | expr . MODULO expr
   66     | expr . INCREMENT
   67     | expr . DECREMENT

    PLUS       shift, and go to state 137
    MINUS      shift, and go to state 138
    MULTIPLY   shift, and go to state 139
    DIVIDE     shift, and go to state 140
    MODULO     shift, and go to state 141
    INCREMENT  shift, and go to state 142
    DECREMENT  shift, and go to state 143

    PLUS       [reduce using rule 52 (value)]
    MINUS      [reduce using rule 52 (value)]
    MULTIPLY   [reduce using rule 52 (value)]
    DIVIDE     [reduce using rule 52 (value)]
    MODULO     [reduce using rule 52 (value)]
    INCREMENT  [reduce using rule 52 (value)]
    DECREMENT  [reduce using rule 52 (value)]
    $default   reduce using rule 52 (value)


state 77

   44 value: newObject .

    $default  reduce using rule 44 (value)


state 78

   56 mathValue: functionCall .

    $default  reduce using rule 56 (mathValue)


state 79

   57 mathValue: ternaryExpression .

    $default  reduce using rule 57 (mathValue)


state 80

   46 value: objectInitializer .

    $default  reduce using rule 46 (value)


state 81

   51 value: expression .
   94 ternaryExpression: expression . _TERNARY value COLON value

    _TERNARY  shift, and go to state 144

    $default  reduce using rule 51 (value)


state 82

   54 mathValue: arrayAccessor .

    $default  reduce using rule 54 (mathValue)


state 83

  100 classStatement: _CLASS IDENT . block
  102               | _CLASS IDENT . _EXTENDS IDENT block

    _EXTENDS  shift, and go to state 145
    LBRACE    shift, and go to state 27

    block              go to state 146
    objectInitializer  go to state 43


state 84

  165 continueStatement: _CONTINUE SEMICOLON .

    $default  reduce using rule 165 (continueStatement)


state 85

  166 continueStatement: _CONTINUE value . SEMICOLON

    SEMICOLON  shift, and go to state 147


state 86

  135 forStatement: _FOR _EACH . LPAREN _VAR variableName optionalVariableType _IN value RPAREN

    LPAREN  shift, and go to state 148


state 87

  133 forStatement: _FOR LPAREN . variableDeclaration SEMICOLON optionalForConditional SEMICOLON optionalForIncrement SEMICOLON
  134             | _FOR LPAREN . _VAR variableName optionalVariableType _IN value RPAREN

    _CONST      shift, and go to state 3
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _VAR        shift, and go to state 149
    _GET        shift, and go to state 20
    _SET        shift, and go to state 21
    _DYNAMIC    shift, and go to state 22
    _FINAL      shift, and go to state 23
    _NATIVE     shift, and go to state 24
    _OVERRIDE   shift, and go to state 25
    _STATIC     shift, and go to state 26

    variableDeclaration  go to state 150
    variableKind         go to state 37
    modifier             go to state 151
    modifierSuffix       go to state 48
    modifierPrefix       go to state 49
    prefixKeyword        go to state 50
    suffixKeyword        go to state 51


state 88

   83 getterSetter: _GET .

    $default  reduce using rule 83 (getterSetter)


state 89

   84 getterSetter: _SET .

    $default  reduce using rule 84 (getterSetter)


state 90

   81 functionDeclaration: _FUNCTION getterSetter . IDENT functionHeader

    IDENT  shift, and go to state 152


state 91

  127 ifStatement: _IF expression . statement
  128            | _IF expression . statement elseStatement

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _SET        shift, and go to state 21
    _DYNAMIC    shift, and go to state 22
    _FINAL      shift, and go to state 23
    _NATIVE     shift, and go to state 24
    _OVERRIDE   shift, and go to state 25
    _STATIC     shift, and go to state 26
    LBRACE      shift, and go to state 27
    IDENT       shift, and go to state 28

    statement            go to state 153
    importStatement      go to state 33
    block                go to state 34
    variableDeclaration  go to state 35
    variableName         go to state 36
    variableKind         go to state 37
    assignStatement      go to state 38
    functionStatement    go to state 39
    functionDeclaration  go to state 40
    functionCall         go to state 41
    packageStatement     go to state 42
    objectInitializer    go to state 43
    superStatement       go to state 44
    returnStatement      go to state 45
    classStatement       go to state 46
    modifier             go to state 47
    modifierSuffix       go to state 48
    modifierPrefix       go to state 49
    prefixKeyword        go to state 50
    suffixKeyword        go to state 51
    ifStatement          go to state 52
    whileStatement       go to state 53
    forStatement         go to state 54
    iterationStatement   go to state 55
    throwStatement       go to state 56
    tryStatement         go to state 57
    withStatement        go to state 58
    continueStatement    go to state 59
    breakStatement       go to state 60


state 92

   23 importStatement: _IMPORT variableName . SEMICOLON

    SEMICOLON  shift, and go to state 154


state 93

   93 packageStatement: _PACKAGE block .

    $default  reduce using rule 93 (packageStatement)


state 94

   92 packageStatement: _PACKAGE variableName . block

    LBRACE  shift, and go to state 27

    block              go to state 155
    objectInitializer  go to state 43


state 95

   99 returnStatement: _RETURN LBRACKET . RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 156


state 96

   97 returnStatement: _RETURN value . SEMICOLON

    SEMICOLON  shift, and go to state 157


state 97

   56 mathValue: functionCall .
   98 returnStatement: _RETURN functionCall . SEMICOLON

    SEMICOLON  shift, and go to state 158

    SEMICOLON  [reduce using rule 56 (mathValue)]
    $default   reduce using rule 56 (mathValue)


state 98

   96 superStatement: _SUPER LPAREN . value RPAREN SEMICOLON

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 159
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 99

  158 throwStatement: _THROW value . SEMICOLON

    SEMICOLON  shift, and go to state 160


state 100

  159 tryStatement: _TRY statement . catch
  160             | _TRY statement . finally
  161             | _TRY statement . catch finally

    _CATCH    shift, and go to state 161
    _FINALLY  shift, and go to state 162

    catch    go to state 163
    finally  go to state 164


state 101

  132 whileStatement: _WHILE value . block

    LBRACE  shift, and go to state 27

    block              go to state 165
    objectInitializer  go to state 43


state 102

  164 withStatement: _WITH LPAREN . expression RPAREN statement

    LPAREN  shift, and go to state 63

    expression  go to state 166


state 103

   24 block: LBRACE RBRACE .

    $default  reduce using rule 24 (block)


state 104

   25 block: LBRACE sourceElements . RBRACE

    RBRACE  shift, and go to state 167


state 105

   30 variableDeclarationList: variableDeclarationList . COMMA variableBinding
   95 objectInitializer: LBRACE variableDeclarationList . RBRACE optionalVariableType

    RBRACE  shift, and go to state 168
    COMMA   shift, and go to state 169


state 106

   29 variableDeclarationList: variableBinding .

    $default  reduce using rule 29 (variableDeclarationList)


state 107

   31 variableBinding: variableName . optionalVariableType variableInitialization
   41 assignStatement: variableName . assign value SEMICOLON
   86 functionCall: variableName . LPAREN valueList RPAREN
   87             | variableName . LPAREN RPAREN
  156 iterationStatement: variableName . INCREMENT SEMICOLON
  157                   | variableName . DECREMENT SEMICOLON

    LPAREN      shift, and go to state 111
    COLON       shift, and go to state 170
    INCREMENT   shift, and go to state 112
    DECREMENT   shift, and go to state 113
    ASSIGN      shift, and go to state 114
    MULTIPLYEQ  shift, and go to state 115
    DIVIDEEQ    shift, and go to state 116
    MODULOEQ    shift, and go to state 117
    PLUSEQ      shift, and go to state 118
    MINUSEQ     shift, and go to state 119

    ASSIGN    [reduce using rule 34 (optionalVariableType)]
    $default  reduce using rule 34 (optionalVariableType)

    optionalVariableType  go to state 171
    assign                go to state 120


state 108

   33 variableName: IDENT ACCESSDOT . variableName

    IDENT  shift, and go to state 28

    variableName  go to state 172


state 109

    0 $accept: program $end .

    $default  accept


state 110

    3 sourceElements: sourceElement sourceElements .

    $default  reduce using rule 3 (sourceElements)


state 111

   86 functionCall: variableName LPAREN . valueList RPAREN
   87             | variableName LPAREN . RPAREN

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    RPAREN     shift, and go to state 173
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    valueList          go to state 174
    value              go to state 175
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 112

  156 iterationStatement: variableName INCREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 176


state 113

  157 iterationStatement: variableName DECREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 177


state 114

  121 assign: ASSIGN .

    $default  reduce using rule 121 (assign)


state 115

  122 assign: MULTIPLYEQ .

    $default  reduce using rule 122 (assign)


state 116

  123 assign: DIVIDEEQ .

    $default  reduce using rule 123 (assign)


state 117

  124 assign: MODULOEQ .

    $default  reduce using rule 124 (assign)


state 118

  125 assign: PLUSEQ .

    $default  reduce using rule 125 (assign)


state 119

  126 assign: MINUSEQ .

    $default  reduce using rule 126 (assign)


state 120

   41 assignStatement: variableName assign . value SEMICOLON

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 178
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 121

   27 variableDeclaration: variableKind variableDeclarationList . SEMICOLON
   30 variableDeclarationList: variableDeclarationList . COMMA variableBinding

    SEMICOLON  shift, and go to state 179
    COMMA      shift, and go to state 169


state 122

   31 variableBinding: variableName . optionalVariableType variableInitialization

    COLON  shift, and go to state 170

    $default  reduce using rule 34 (optionalVariableType)

    optionalVariableType  go to state 171


state 123

   79 functionStatement: functionCall SEMICOLON .

    $default  reduce using rule 79 (functionStatement)


state 124

  101 classStatement: modifier _CLASS . IDENT block
  103               | modifier _CLASS . IDENT _EXTENDS IDENT block

    IDENT  shift, and go to state 180


state 125

   82 functionDeclaration: modifier _FUNCTION . getterSetter IDENT functionHeader

    _GET  shift, and go to state 88
    _SET  shift, and go to state 89

    $default  reduce using rule 85 (getterSetter)

    getterSetter  go to state 181


state 126

   28 variableDeclaration: modifier variableKind . variableDeclarationList SEMICOLON

    IDENT  shift, and go to state 28

    variableDeclarationList  go to state 182
    variableBinding          go to state 106
    variableName             go to state 122


state 127

  104 modifier: modifierPrefix modifierSuffix .

    $default  reduce using rule 104 (modifier)


state 128

  110 modifierPrefix: prefixKeyword modifierPrefix .

    $default  reduce using rule 110 (modifierPrefix)


state 129

  108 modifierSuffix: suffixKeyword modifierSuffix .

    $default  reduce using rule 108 (modifierSuffix)


state 130

  130 expression: LPAREN value . logicalOperator expression RPAREN
  131           | LPAREN value . RPAREN

    RPAREN         shift, and go to state 183
    LESSTHAN       shift, and go to state 184
    GREATERTHAN    shift, and go to state 185
    EQUALSEQUALS   shift, and go to state 186
    STRICTEQUALS   shift, and go to state 187
    STRICTNOTEQ    shift, and go to state 188
    GTHANEQ        shift, and go to state 189
    LTHANEQ        shift, and go to state 190
    NOTEQUAL       shift, and go to state 191
    NOT            shift, and go to state 192
    NOTEQUALEQUAL  shift, and go to state 193
    LOGICALAND     shift, and go to state 194
    LOGICALOR      shift, and go to state 195

    logicalOperator  go to state 196


state 131

   59 mathValue: PLUS mathValue .

    $default  reduce using rule 59 (mathValue)


state 132

   94 ternaryExpression: expression . _TERNARY value COLON value

    _TERNARY  shift, and go to state 144


state 133

   58 mathValue: MINUS mathValue .

    $default  reduce using rule 58 (mathValue)


state 134

   75 newObject: _NEW IDENT . LPAREN RPAREN optionalVariableType as
   76          | _NEW IDENT . LPAREN valueList RPAREN optionalVariableType as

    LPAREN  shift, and go to state 197


state 135

  140 arrayAccessor: variableName LBRACKET . accessValue RBRACKET
  141              | variableName LBRACKET . RBRACKET

    RBRACKET   shift, and go to state 198
    NUMBERLIT  shift, and go to state 199
    IDENT      shift, and go to state 28

    variableName  go to state 200
    accessValue   go to state 201


state 136

  168 breakStatement: _BREAK value SEMICOLON .

    $default  reduce using rule 168 (breakStatement)


state 137

   61 expr: expr PLUS . expr

    LPAREN     shift, and go to state 63
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    mathValue          go to state 75
    expr               go to state 202
    functionCall       go to state 78
    ternaryExpression  go to state 79
    expression         go to state 132
    arrayAccessor      go to state 82


state 138

   62 expr: expr MINUS . expr

    LPAREN     shift, and go to state 63
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    mathValue          go to state 75
    expr               go to state 203
    functionCall       go to state 78
    ternaryExpression  go to state 79
    expression         go to state 132
    arrayAccessor      go to state 82


state 139

   63 expr: expr MULTIPLY . expr

    LPAREN     shift, and go to state 63
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    mathValue          go to state 75
    expr               go to state 204
    functionCall       go to state 78
    ternaryExpression  go to state 79
    expression         go to state 132
    arrayAccessor      go to state 82


state 140

   64 expr: expr DIVIDE . expr

    LPAREN     shift, and go to state 63
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    mathValue          go to state 75
    expr               go to state 205
    functionCall       go to state 78
    ternaryExpression  go to state 79
    expression         go to state 132
    arrayAccessor      go to state 82


state 141

   65 expr: expr MODULO . expr

    LPAREN     shift, and go to state 63
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    mathValue          go to state 75
    expr               go to state 206
    functionCall       go to state 78
    ternaryExpression  go to state 79
    expression         go to state 132
    arrayAccessor      go to state 82


state 142

   66 expr: expr INCREMENT .

    $default  reduce using rule 66 (expr)


state 143

   67 expr: expr DECREMENT .

    $default  reduce using rule 67 (expr)


state 144

   94 ternaryExpression: expression _TERNARY . value COLON value

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 207
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 145

  102 classStatement: _CLASS IDENT _EXTENDS . IDENT block

    IDENT  shift, and go to state 208


state 146

  100 classStatement: _CLASS IDENT block .

    $default  reduce using rule 100 (classStatement)


state 147

  166 continueStatement: _CONTINUE value SEMICOLON .

    $default  reduce using rule 166 (continueStatement)


state 148

  135 forStatement: _FOR _EACH LPAREN . _VAR variableName optionalVariableType _IN value RPAREN

    _VAR  shift, and go to state 209


state 149

   37 variableKind: _VAR .
  134 forStatement: _FOR LPAREN _VAR . variableName optionalVariableType _IN value RPAREN

    IDENT  shift, and go to state 28

    IDENT  [reduce using rule 37 (variableKind)]

    variableName  go to state 210


state 150

  133 forStatement: _FOR LPAREN variableDeclaration . SEMICOLON optionalForConditional SEMICOLON optionalForIncrement SEMICOLON

    SEMICOLON  shift, and go to state 211


state 151

   28 variableDeclaration: modifier . variableKind variableDeclarationList SEMICOLON

    _CONST  shift, and go to state 3
    _VAR    shift, and go to state 17

    variableKind  go to state 126


state 152

   81 functionDeclaration: _FUNCTION getterSetter IDENT . functionHeader

    LPAREN  shift, and go to state 212

    functionHeader  go to state 213


state 153

  127 ifStatement: _IF expression statement .
  128            | _IF expression statement . elseStatement

    _ELSE  shift, and go to state 214

    _ELSE     [reduce using rule 127 (ifStatement)]
    $default  reduce using rule 127 (ifStatement)

    elseStatement  go to state 215


state 154

   23 importStatement: _IMPORT variableName SEMICOLON .

    $default  reduce using rule 23 (importStatement)


state 155

   92 packageStatement: _PACKAGE variableName block .

    $default  reduce using rule 92 (packageStatement)


state 156

   99 returnStatement: _RETURN LBRACKET RBRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 216


state 157

   97 returnStatement: _RETURN value SEMICOLON .

    $default  reduce using rule 97 (returnStatement)


state 158

   98 returnStatement: _RETURN functionCall SEMICOLON .

    $default  reduce using rule 98 (returnStatement)


state 159

   96 superStatement: _SUPER LPAREN value . RPAREN SEMICOLON

    RPAREN  shift, and go to state 217


state 160

  158 throwStatement: _THROW value SEMICOLON .

    $default  reduce using rule 158 (throwStatement)


state 161

  162 catch: _CATCH . LPAREN value RPAREN statement

    LPAREN  shift, and go to state 218


state 162

  163 finally: _FINALLY . statement

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _SET        shift, and go to state 21
    _DYNAMIC    shift, and go to state 22
    _FINAL      shift, and go to state 23
    _NATIVE     shift, and go to state 24
    _OVERRIDE   shift, and go to state 25
    _STATIC     shift, and go to state 26
    LBRACE      shift, and go to state 27
    IDENT       shift, and go to state 28

    statement            go to state 219
    importStatement      go to state 33
    block                go to state 34
    variableDeclaration  go to state 35
    variableName         go to state 36
    variableKind         go to state 37
    assignStatement      go to state 38
    functionStatement    go to state 39
    functionDeclaration  go to state 40
    functionCall         go to state 41
    packageStatement     go to state 42
    objectInitializer    go to state 43
    superStatement       go to state 44
    returnStatement      go to state 45
    classStatement       go to state 46
    modifier             go to state 47
    modifierSuffix       go to state 48
    modifierPrefix       go to state 49
    prefixKeyword        go to state 50
    suffixKeyword        go to state 51
    ifStatement          go to state 52
    whileStatement       go to state 53
    forStatement         go to state 54
    iterationStatement   go to state 55
    throwStatement       go to state 56
    tryStatement         go to state 57
    withStatement        go to state 58
    continueStatement    go to state 59
    breakStatement       go to state 60


state 163

  159 tryStatement: _TRY statement catch .
  161             | _TRY statement catch . finally

    _FINALLY  shift, and go to state 162

    _FINALLY  [reduce using rule 159 (tryStatement)]
    $default  reduce using rule 159 (tryStatement)

    finally  go to state 220


state 164

  160 tryStatement: _TRY statement finally .

    $default  reduce using rule 160 (tryStatement)


state 165

  132 whileStatement: _WHILE value block .

    $default  reduce using rule 132 (whileStatement)


state 166

  164 withStatement: _WITH LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 221


state 167

   25 block: LBRACE sourceElements RBRACE .

    $default  reduce using rule 25 (block)


state 168

   95 objectInitializer: LBRACE variableDeclarationList RBRACE . optionalVariableType

    COLON  shift, and go to state 170

    COLON     [reduce using rule 34 (optionalVariableType)]
    $default  reduce using rule 34 (optionalVariableType)

    optionalVariableType  go to state 222


state 169

   30 variableDeclarationList: variableDeclarationList COMMA . variableBinding

    IDENT  shift, and go to state 28

    variableBinding  go to state 223
    variableName     go to state 122


state 170

   35 optionalVariableType: COLON . variableName
   36                     | COLON . nativeType

    _NULL     shift, and go to state 224
    _UINT     shift, and go to state 225
    _INT      shift, and go to state 226
    _BOOLEAN  shift, and go to state 227
    _STRING   shift, and go to state 228
    _NUMBER   shift, and go to state 229
    _VOID     shift, and go to state 230
    IDENT     shift, and go to state 28

    variableName  go to state 231
    nativeType    go to state 232


state 171

   31 variableBinding: variableName optionalVariableType . variableInitialization

    ASSIGN  shift, and go to state 233

    $default  reduce using rule 39 (variableInitialization)

    variableInitialization  go to state 234


state 172

   33 variableName: IDENT ACCESSDOT variableName .

    $default  reduce using rule 33 (variableName)


state 173

   87 functionCall: variableName LPAREN RPAREN .

    $default  reduce using rule 87 (functionCall)


state 174

   43 valueList: valueList . COMMA value
   86 functionCall: variableName LPAREN valueList . RPAREN

    RPAREN  shift, and go to state 235
    COMMA   shift, and go to state 236


state 175

   42 valueList: value .

    $default  reduce using rule 42 (valueList)


state 176

  156 iterationStatement: variableName INCREMENT SEMICOLON .

    $default  reduce using rule 156 (iterationStatement)


state 177

  157 iterationStatement: variableName DECREMENT SEMICOLON .

    $default  reduce using rule 157 (iterationStatement)


state 178

   41 assignStatement: variableName assign value . SEMICOLON

    SEMICOLON  shift, and go to state 237


state 179

   27 variableDeclaration: variableKind variableDeclarationList SEMICOLON .

    $default  reduce using rule 27 (variableDeclaration)


state 180

  101 classStatement: modifier _CLASS IDENT . block
  103               | modifier _CLASS IDENT . _EXTENDS IDENT block

    _EXTENDS  shift, and go to state 238
    LBRACE    shift, and go to state 27

    block              go to state 239
    objectInitializer  go to state 43


state 181

   82 functionDeclaration: modifier _FUNCTION getterSetter . IDENT functionHeader

    IDENT  shift, and go to state 240


state 182

   28 variableDeclaration: modifier variableKind variableDeclarationList . SEMICOLON
   30 variableDeclarationList: variableDeclarationList . COMMA variableBinding

    SEMICOLON  shift, and go to state 241
    COMMA      shift, and go to state 169


state 183

  131 expression: LPAREN value RPAREN .

    $default  reduce using rule 131 (expression)


state 184

  144 logicalOperator: LESSTHAN .

    $default  reduce using rule 144 (logicalOperator)


state 185

  145 logicalOperator: GREATERTHAN .

    $default  reduce using rule 145 (logicalOperator)


state 186

  146 logicalOperator: EQUALSEQUALS .

    $default  reduce using rule 146 (logicalOperator)


state 187

  147 logicalOperator: STRICTEQUALS .

    $default  reduce using rule 147 (logicalOperator)


state 188

  148 logicalOperator: STRICTNOTEQ .

    $default  reduce using rule 148 (logicalOperator)


state 189

  149 logicalOperator: GTHANEQ .

    $default  reduce using rule 149 (logicalOperator)


state 190

  150 logicalOperator: LTHANEQ .

    $default  reduce using rule 150 (logicalOperator)


state 191

  151 logicalOperator: NOTEQUAL .

    $default  reduce using rule 151 (logicalOperator)


state 192

  152 logicalOperator: NOT .

    $default  reduce using rule 152 (logicalOperator)


state 193

  153 logicalOperator: NOTEQUALEQUAL .

    $default  reduce using rule 153 (logicalOperator)


state 194

  154 logicalOperator: LOGICALAND .

    $default  reduce using rule 154 (logicalOperator)


state 195

  155 logicalOperator: LOGICALOR .

    $default  reduce using rule 155 (logicalOperator)


state 196

  130 expression: LPAREN value logicalOperator . expression RPAREN

    LPAREN  shift, and go to state 63

    expression  go to state 242


state 197

   75 newObject: _NEW IDENT LPAREN . RPAREN optionalVariableType as
   76          | _NEW IDENT LPAREN . valueList RPAREN optionalVariableType as

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    RPAREN     shift, and go to state 243
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    valueList          go to state 244
    value              go to state 175
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 198

  141 arrayAccessor: variableName LBRACKET RBRACKET .

    $default  reduce using rule 141 (arrayAccessor)


state 199

  142 accessValue: NUMBERLIT .

    $default  reduce using rule 142 (accessValue)


state 200

  143 accessValue: variableName .

    $default  reduce using rule 143 (accessValue)


state 201

  140 arrayAccessor: variableName LBRACKET accessValue . RBRACKET

    RBRACKET  shift, and go to state 245


state 202

   61 expr: expr . PLUS expr
   61     | expr PLUS expr .
   62     | expr . MINUS expr
   63     | expr . MULTIPLY expr
   64     | expr . DIVIDE expr
   65     | expr . MODULO expr
   66     | expr . INCREMENT
   67     | expr . DECREMENT

    MODULO     shift, and go to state 141
    INCREMENT  shift, and go to state 142
    DECREMENT  shift, and go to state 143

    MODULO     [reduce using rule 61 (expr)]
    INCREMENT  [reduce using rule 61 (expr)]
    DECREMENT  [reduce using rule 61 (expr)]
    $default   reduce using rule 61 (expr)


state 203

   61 expr: expr . PLUS expr
   62     | expr . MINUS expr
   62     | expr MINUS expr .
   63     | expr . MULTIPLY expr
   64     | expr . DIVIDE expr
   65     | expr . MODULO expr
   66     | expr . INCREMENT
   67     | expr . DECREMENT

    MODULO     shift, and go to state 141
    INCREMENT  shift, and go to state 142
    DECREMENT  shift, and go to state 143

    MODULO     [reduce using rule 62 (expr)]
    INCREMENT  [reduce using rule 62 (expr)]
    DECREMENT  [reduce using rule 62 (expr)]
    $default   reduce using rule 62 (expr)


state 204

   61 expr: expr . PLUS expr
   62     | expr . MINUS expr
   63     | expr . MULTIPLY expr
   63     | expr MULTIPLY expr .
   64     | expr . DIVIDE expr
   65     | expr . MODULO expr
   66     | expr . INCREMENT
   67     | expr . DECREMENT

    MODULO     shift, and go to state 141
    INCREMENT  shift, and go to state 142
    DECREMENT  shift, and go to state 143

    MODULO     [reduce using rule 63 (expr)]
    INCREMENT  [reduce using rule 63 (expr)]
    DECREMENT  [reduce using rule 63 (expr)]
    $default   reduce using rule 63 (expr)


state 205

   61 expr: expr . PLUS expr
   62     | expr . MINUS expr
   63     | expr . MULTIPLY expr
   64     | expr . DIVIDE expr
   64     | expr DIVIDE expr .
   65     | expr . MODULO expr
   66     | expr . INCREMENT
   67     | expr . DECREMENT

    MODULO     shift, and go to state 141
    INCREMENT  shift, and go to state 142
    DECREMENT  shift, and go to state 143

    MODULO     [reduce using rule 64 (expr)]
    INCREMENT  [reduce using rule 64 (expr)]
    DECREMENT  [reduce using rule 64 (expr)]
    $default   reduce using rule 64 (expr)


state 206

   61 expr: expr . PLUS expr
   62     | expr . MINUS expr
   63     | expr . MULTIPLY expr
   64     | expr . DIVIDE expr
   65     | expr . MODULO expr
   65     | expr MODULO expr .
   66     | expr . INCREMENT
   67     | expr . DECREMENT

    PLUS       shift, and go to state 137
    MINUS      shift, and go to state 138
    MULTIPLY   shift, and go to state 139
    DIVIDE     shift, and go to state 140
    MODULO     shift, and go to state 141
    INCREMENT  shift, and go to state 142
    DECREMENT  shift, and go to state 143

    PLUS       [reduce using rule 65 (expr)]
    MINUS      [reduce using rule 65 (expr)]
    MULTIPLY   [reduce using rule 65 (expr)]
    DIVIDE     [reduce using rule 65 (expr)]
    MODULO     [reduce using rule 65 (expr)]
    INCREMENT  [reduce using rule 65 (expr)]
    DECREMENT  [reduce using rule 65 (expr)]
    $default   reduce using rule 65 (expr)


state 207

   94 ternaryExpression: expression _TERNARY value . COLON value

    COLON  shift, and go to state 246


state 208

  102 classStatement: _CLASS IDENT _EXTENDS IDENT . block

    LBRACE  shift, and go to state 27

    block              go to state 247
    objectInitializer  go to state 43


state 209

  135 forStatement: _FOR _EACH LPAREN _VAR . variableName optionalVariableType _IN value RPAREN

    IDENT  shift, and go to state 28

    variableName  go to state 248


state 210

  134 forStatement: _FOR LPAREN _VAR variableName . optionalVariableType _IN value RPAREN

    COLON  shift, and go to state 170

    $default  reduce using rule 34 (optionalVariableType)

    optionalVariableType  go to state 249


state 211

  133 forStatement: _FOR LPAREN variableDeclaration SEMICOLON . optionalForConditional SEMICOLON optionalForIncrement SEMICOLON

    LPAREN     shift, and go to state 63
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    $default  reduce using rule 136 (optionalForConditional)

    variableName            go to state 73
    mathValue               go to state 250
    functionCall            go to state 78
    ternaryExpression       go to state 79
    expression              go to state 132
    optionalForConditional  go to state 251
    arrayAccessor           go to state 82


state 212

   88 functionHeader: LPAREN . variableDeclarationList RPAREN block
   89               | LPAREN . variableDeclarationList RPAREN COLON variableName block
   90               | LPAREN . RPAREN block
   91               | LPAREN . RPAREN COLON variableName block

    RPAREN  shift, and go to state 252
    IDENT   shift, and go to state 28

    variableDeclarationList  go to state 253
    variableBinding          go to state 106
    variableName             go to state 122


state 213

   81 functionDeclaration: _FUNCTION getterSetter IDENT functionHeader .

    $default  reduce using rule 81 (functionDeclaration)


state 214

  129 elseStatement: _ELSE . statement

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _SET        shift, and go to state 21
    _DYNAMIC    shift, and go to state 22
    _FINAL      shift, and go to state 23
    _NATIVE     shift, and go to state 24
    _OVERRIDE   shift, and go to state 25
    _STATIC     shift, and go to state 26
    LBRACE      shift, and go to state 27
    IDENT       shift, and go to state 28

    statement            go to state 254
    importStatement      go to state 33
    block                go to state 34
    variableDeclaration  go to state 35
    variableName         go to state 36
    variableKind         go to state 37
    assignStatement      go to state 38
    functionStatement    go to state 39
    functionDeclaration  go to state 40
    functionCall         go to state 41
    packageStatement     go to state 42
    objectInitializer    go to state 43
    superStatement       go to state 44
    returnStatement      go to state 45
    classStatement       go to state 46
    modifier             go to state 47
    modifierSuffix       go to state 48
    modifierPrefix       go to state 49
    prefixKeyword        go to state 50
    suffixKeyword        go to state 51
    ifStatement          go to state 52
    whileStatement       go to state 53
    forStatement         go to state 54
    iterationStatement   go to state 55
    throwStatement       go to state 56
    tryStatement         go to state 57
    withStatement        go to state 58
    continueStatement    go to state 59
    breakStatement       go to state 60


state 215

  128 ifStatement: _IF expression statement elseStatement .

    $default  reduce using rule 128 (ifStatement)


state 216

   99 returnStatement: _RETURN LBRACKET RBRACKET SEMICOLON .

    $default  reduce using rule 99 (returnStatement)


state 217

   96 superStatement: _SUPER LPAREN value RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 255


state 218

  162 catch: _CATCH LPAREN . value RPAREN statement

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 256
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 219

  163 finally: _FINALLY statement .

    $default  reduce using rule 163 (finally)


state 220

  161 tryStatement: _TRY statement catch finally .

    $default  reduce using rule 161 (tryStatement)


state 221

  164 withStatement: _WITH LPAREN expression RPAREN . statement

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _SET        shift, and go to state 21
    _DYNAMIC    shift, and go to state 22
    _FINAL      shift, and go to state 23
    _NATIVE     shift, and go to state 24
    _OVERRIDE   shift, and go to state 25
    _STATIC     shift, and go to state 26
    LBRACE      shift, and go to state 27
    IDENT       shift, and go to state 28

    statement            go to state 257
    importStatement      go to state 33
    block                go to state 34
    variableDeclaration  go to state 35
    variableName         go to state 36
    variableKind         go to state 37
    assignStatement      go to state 38
    functionStatement    go to state 39
    functionDeclaration  go to state 40
    functionCall         go to state 41
    packageStatement     go to state 42
    objectInitializer    go to state 43
    superStatement       go to state 44
    returnStatement      go to state 45
    classStatement       go to state 46
    modifier             go to state 47
    modifierSuffix       go to state 48
    modifierPrefix       go to state 49
    prefixKeyword        go to state 50
    suffixKeyword        go to state 51
    ifStatement          go to state 52
    whileStatement       go to state 53
    forStatement         go to state 54
    iterationStatement   go to state 55
    throwStatement       go to state 56
    tryStatement         go to state 57
    withStatement        go to state 58
    continueStatement    go to state 59
    breakStatement       go to state 60


state 222

   95 objectInitializer: LBRACE variableDeclarationList RBRACE optionalVariableType .

    $default  reduce using rule 95 (objectInitializer)


state 223

   30 variableDeclarationList: variableDeclarationList COMMA variableBinding .

    $default  reduce using rule 30 (variableDeclarationList)


state 224

   74 nativeType: _NULL .

    $default  reduce using rule 74 (nativeType)


state 225

   68 nativeType: _UINT .

    $default  reduce using rule 68 (nativeType)


state 226

   69 nativeType: _INT .

    $default  reduce using rule 69 (nativeType)


state 227

   70 nativeType: _BOOLEAN .

    $default  reduce using rule 70 (nativeType)


state 228

   72 nativeType: _STRING .

    $default  reduce using rule 72 (nativeType)


state 229

   71 nativeType: _NUMBER .

    $default  reduce using rule 71 (nativeType)


state 230

   73 nativeType: _VOID .

    $default  reduce using rule 73 (nativeType)


state 231

   35 optionalVariableType: COLON variableName .

    $default  reduce using rule 35 (optionalVariableType)


state 232

   36 optionalVariableType: COLON nativeType .

    $default  reduce using rule 36 (optionalVariableType)


state 233

   40 variableInitialization: ASSIGN . value

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 258
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 234

   31 variableBinding: variableName optionalVariableType variableInitialization .

    $default  reduce using rule 31 (variableBinding)


state 235

   86 functionCall: variableName LPAREN valueList RPAREN .

    $default  reduce using rule 86 (functionCall)


state 236

   43 valueList: valueList COMMA . value

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 259
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 237

   41 assignStatement: variableName assign value SEMICOLON .

    $default  reduce using rule 41 (assignStatement)


state 238

  103 classStatement: modifier _CLASS IDENT _EXTENDS . IDENT block

    IDENT  shift, and go to state 260


state 239

  101 classStatement: modifier _CLASS IDENT block .

    $default  reduce using rule 101 (classStatement)


state 240

   82 functionDeclaration: modifier _FUNCTION getterSetter IDENT . functionHeader

    LPAREN  shift, and go to state 212

    functionHeader  go to state 261


state 241

   28 variableDeclaration: modifier variableKind variableDeclarationList SEMICOLON .

    $default  reduce using rule 28 (variableDeclaration)


state 242

  130 expression: LPAREN value logicalOperator expression . RPAREN

    RPAREN  shift, and go to state 262


state 243

   75 newObject: _NEW IDENT LPAREN RPAREN . optionalVariableType as

    COLON  shift, and go to state 170

    COLON     [reduce using rule 34 (optionalVariableType)]
    $default  reduce using rule 34 (optionalVariableType)

    optionalVariableType  go to state 263


state 244

   43 valueList: valueList . COMMA value
   76 newObject: _NEW IDENT LPAREN valueList . RPAREN optionalVariableType as

    RPAREN  shift, and go to state 264
    COMMA   shift, and go to state 236


state 245

  140 arrayAccessor: variableName LBRACKET accessValue RBRACKET .

    $default  reduce using rule 140 (arrayAccessor)


state 246

   94 ternaryExpression: expression _TERNARY value COLON . value

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 265
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 247

  102 classStatement: _CLASS IDENT _EXTENDS IDENT block .

    $default  reduce using rule 102 (classStatement)


state 248

  135 forStatement: _FOR _EACH LPAREN _VAR variableName . optionalVariableType _IN value RPAREN

    COLON  shift, and go to state 170

    $default  reduce using rule 34 (optionalVariableType)

    optionalVariableType  go to state 266


state 249

  134 forStatement: _FOR LPAREN _VAR variableName optionalVariableType . _IN value RPAREN

    _IN  shift, and go to state 267


state 250

  137 optionalForConditional: mathValue .

    $default  reduce using rule 137 (optionalForConditional)


state 251

  133 forStatement: _FOR LPAREN variableDeclaration SEMICOLON optionalForConditional . SEMICOLON optionalForIncrement SEMICOLON

    SEMICOLON  shift, and go to state 268


state 252

   90 functionHeader: LPAREN RPAREN . block
   91               | LPAREN RPAREN . COLON variableName block

    LBRACE  shift, and go to state 27
    COLON   shift, and go to state 269

    block              go to state 270
    objectInitializer  go to state 43


state 253

   30 variableDeclarationList: variableDeclarationList . COMMA variableBinding
   88 functionHeader: LPAREN variableDeclarationList . RPAREN block
   89               | LPAREN variableDeclarationList . RPAREN COLON variableName block

    RPAREN  shift, and go to state 271
    COMMA   shift, and go to state 169


state 254

  129 elseStatement: _ELSE statement .

    $default  reduce using rule 129 (elseStatement)


state 255

   96 superStatement: _SUPER LPAREN value RPAREN SEMICOLON .

    $default  reduce using rule 96 (superStatement)


state 256

  162 catch: _CATCH LPAREN value . RPAREN statement

    RPAREN  shift, and go to state 272


state 257

  164 withStatement: _WITH LPAREN expression RPAREN statement .

    $default  reduce using rule 164 (withStatement)


state 258

   40 variableInitialization: ASSIGN value .

    $default  reduce using rule 40 (variableInitialization)


state 259

   43 valueList: valueList COMMA value .

    $default  reduce using rule 43 (valueList)


state 260

  103 classStatement: modifier _CLASS IDENT _EXTENDS IDENT . block

    LBRACE  shift, and go to state 27

    block              go to state 273
    objectInitializer  go to state 43


state 261

   82 functionDeclaration: modifier _FUNCTION getterSetter IDENT functionHeader .

    $default  reduce using rule 82 (functionDeclaration)


state 262

  130 expression: LPAREN value logicalOperator expression RPAREN .

    $default  reduce using rule 130 (expression)


state 263

   75 newObject: _NEW IDENT LPAREN RPAREN optionalVariableType . as

    _AS  shift, and go to state 274

    $default  reduce using rule 78 (as)

    as  go to state 275


state 264

   76 newObject: _NEW IDENT LPAREN valueList RPAREN . optionalVariableType as

    COLON  shift, and go to state 170

    COLON     [reduce using rule 34 (optionalVariableType)]
    $default  reduce using rule 34 (optionalVariableType)

    optionalVariableType  go to state 276


state 265

   94 ternaryExpression: expression _TERNARY value COLON value .

    $default  reduce using rule 94 (ternaryExpression)


state 266

  135 forStatement: _FOR _EACH LPAREN _VAR variableName optionalVariableType . _IN value RPAREN

    _IN  shift, and go to state 277


state 267

  134 forStatement: _FOR LPAREN _VAR variableName optionalVariableType _IN . value RPAREN

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 278
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 268

  133 forStatement: _FOR LPAREN variableDeclaration SEMICOLON optionalForConditional SEMICOLON . optionalForIncrement SEMICOLON

    LPAREN     shift, and go to state 63
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    $default  reduce using rule 138 (optionalForIncrement)

    variableName          go to state 73
    mathValue             go to state 279
    functionCall          go to state 78
    ternaryExpression     go to state 79
    expression            go to state 132
    optionalForIncrement  go to state 280
    arrayAccessor         go to state 82


state 269

   91 functionHeader: LPAREN RPAREN COLON . variableName block

    IDENT  shift, and go to state 28

    variableName  go to state 281


state 270

   90 functionHeader: LPAREN RPAREN block .

    $default  reduce using rule 90 (functionHeader)


state 271

   88 functionHeader: LPAREN variableDeclarationList RPAREN . block
   89               | LPAREN variableDeclarationList RPAREN . COLON variableName block

    LBRACE  shift, and go to state 27
    COLON   shift, and go to state 282

    block              go to state 283
    objectInitializer  go to state 43


state 272

  162 catch: _CATCH LPAREN value RPAREN . statement

    _BREAK      shift, and go to state 1
    _CLASS      shift, and go to state 2
    _CONST      shift, and go to state 3
    _CONTINUE   shift, and go to state 4
    _FOR        shift, and go to state 5
    _FUNCTION   shift, and go to state 6
    _IF         shift, and go to state 7
    _IMPORT     shift, and go to state 8
    _PACKAGE    shift, and go to state 9
    _PRIVATE    shift, and go to state 10
    _PROTECTED  shift, and go to state 11
    _PUBLIC     shift, and go to state 12
    _RETURN     shift, and go to state 13
    _SUPER      shift, and go to state 14
    _THROW      shift, and go to state 15
    _TRY        shift, and go to state 16
    _VAR        shift, and go to state 17
    _WHILE      shift, and go to state 18
    _WITH       shift, and go to state 19
    _GET        shift, and go to state 20
    _SET        shift, and go to state 21
    _DYNAMIC    shift, and go to state 22
    _FINAL      shift, and go to state 23
    _NATIVE     shift, and go to state 24
    _OVERRIDE   shift, and go to state 25
    _STATIC     shift, and go to state 26
    LBRACE      shift, and go to state 27
    IDENT       shift, and go to state 28

    statement            go to state 284
    importStatement      go to state 33
    block                go to state 34
    variableDeclaration  go to state 35
    variableName         go to state 36
    variableKind         go to state 37
    assignStatement      go to state 38
    functionStatement    go to state 39
    functionDeclaration  go to state 40
    functionCall         go to state 41
    packageStatement     go to state 42
    objectInitializer    go to state 43
    superStatement       go to state 44
    returnStatement      go to state 45
    classStatement       go to state 46
    modifier             go to state 47
    modifierSuffix       go to state 48
    modifierPrefix       go to state 49
    prefixKeyword        go to state 50
    suffixKeyword        go to state 51
    ifStatement          go to state 52
    whileStatement       go to state 53
    forStatement         go to state 54
    iterationStatement   go to state 55
    throwStatement       go to state 56
    tryStatement         go to state 57
    withStatement        go to state 58
    continueStatement    go to state 59
    breakStatement       go to state 60


state 273

  103 classStatement: modifier _CLASS IDENT _EXTENDS IDENT block .

    $default  reduce using rule 103 (classStatement)


state 274

   77 as: _AS . variableName

    IDENT  shift, and go to state 28

    variableName  go to state 285


state 275

   75 newObject: _NEW IDENT LPAREN RPAREN optionalVariableType as .

    $default  reduce using rule 75 (newObject)


state 276

   76 newObject: _NEW IDENT LPAREN valueList RPAREN optionalVariableType . as

    _AS  shift, and go to state 274

    $default  reduce using rule 78 (as)

    as  go to state 286


state 277

  135 forStatement: _FOR _EACH LPAREN _VAR variableName optionalVariableType _IN . value RPAREN

    _NULL      shift, and go to state 61
    _THIS      shift, and go to state 62
    LPAREN     shift, and go to state 63
    LBRACE     shift, and go to state 64
    PLUS       shift, and go to state 66
    MINUS      shift, and go to state 67
    _TRUE      shift, and go to state 68
    _FALSE     shift, and go to state 69
    _NEW       shift, and go to state 70
    STRINGLIT  shift, and go to state 71
    NUMBERLIT  shift, and go to state 72
    IDENT      shift, and go to state 28

    variableName       go to state 73
    value              go to state 287
    mathValue          go to state 75
    expr               go to state 76
    newObject          go to state 77
    functionCall       go to state 78
    ternaryExpression  go to state 79
    objectInitializer  go to state 80
    expression         go to state 81
    arrayAccessor      go to state 82


state 278

  134 forStatement: _FOR LPAREN _VAR variableName optionalVariableType _IN value . RPAREN

    RPAREN  shift, and go to state 288


state 279

  139 optionalForIncrement: mathValue .

    $default  reduce using rule 139 (optionalForIncrement)


state 280

  133 forStatement: _FOR LPAREN variableDeclaration SEMICOLON optionalForConditional SEMICOLON optionalForIncrement . SEMICOLON

    SEMICOLON  shift, and go to state 289


state 281

   91 functionHeader: LPAREN RPAREN COLON variableName . block

    LBRACE  shift, and go to state 27

    block              go to state 290
    objectInitializer  go to state 43


state 282

   89 functionHeader: LPAREN variableDeclarationList RPAREN COLON . variableName block

    IDENT  shift, and go to state 28

    variableName  go to state 291


state 283

   88 functionHeader: LPAREN variableDeclarationList RPAREN block .

    $default  reduce using rule 88 (functionHeader)


state 284

  162 catch: _CATCH LPAREN value RPAREN statement .

    $default  reduce using rule 162 (catch)


state 285

   77 as: _AS variableName .

    $default  reduce using rule 77 (as)


state 286

   76 newObject: _NEW IDENT LPAREN valueList RPAREN optionalVariableType as .

    $default  reduce using rule 76 (newObject)


state 287

  135 forStatement: _FOR _EACH LPAREN _VAR variableName optionalVariableType _IN value . RPAREN

    RPAREN  shift, and go to state 292


state 288

  134 forStatement: _FOR LPAREN _VAR variableName optionalVariableType _IN value RPAREN .

    $default  reduce using rule 134 (forStatement)


state 289

  133 forStatement: _FOR LPAREN variableDeclaration SEMICOLON optionalForConditional SEMICOLON optionalForIncrement SEMICOLON .

    $default  reduce using rule 133 (forStatement)


state 290

   91 functionHeader: LPAREN RPAREN COLON variableName block .

    $default  reduce using rule 91 (functionHeader)


state 291

   89 functionHeader: LPAREN variableDeclarationList RPAREN COLON variableName . block

    LBRACE  shift, and go to state 27

    block              go to state 293
    objectInitializer  go to state 43


state 292

  135 forStatement: _FOR _EACH LPAREN _VAR variableName optionalVariableType _IN value RPAREN .

    $default  reduce using rule 135 (forStatement)


state 293

   89 functionHeader: LPAREN variableDeclarationList RPAREN COLON variableName block .

    $default  reduce using rule 89 (functionHeader)
